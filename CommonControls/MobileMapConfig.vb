' | Version 10.2
' | Copyright 2014 Esri
' |
' | Licensed under the Apache License, Version 2.0 (the "License");
' | you may not use this file except in compliance with the License.
' | You may obtain a copy of the License at
' |
' |    http://www.apache.org/licenses/LICENSE-2.0
' |
' | Unless required by applicable law or agreed to in writing, software
' | distributed under the License is distributed on an "AS IS" BASIS,
' | WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
' | See the License for the specific language governing permissions and
' | limitations under the License.


'' ------------------------------------------------------------------------------
''  <auto-generated>
''    Generated by Xsd2Code. Version 3.4.0.38967
''    <NameSpace>MobileConfigClass</NameSpace><Collection>List</Collection><codeType>VisualBasic</codeType><EnableDataBinding>False</EnableDataBinding><EnableLazyLoading>False</EnableLazyLoading><TrackingChangesEnable>False</TrackingChangesEnable><GenTrackingClasses>False</GenTrackingClasses><HidePrivateFieldInIDE>False</HidePrivateFieldInIDE><EnableSummaryComment>False</EnableSummaryComment><VirtualProp>False</VirtualProp><IncludeSerializeMethod>True</IncludeSerializeMethod><UseBaseClass>False</UseBaseClass><GenBaseClass>False</GenBaseClass><GenerateCloneMethod>False</GenerateCloneMethod><GenerateDataContracts>False</GenerateDataContracts><CodeBaseTag>Net35</CodeBaseTag><SerializeMethodName>Serialize</SerializeMethodName><DeserializeMethodName>Deserialize</DeserializeMethodName><SaveToFileMethodName>SaveToFile</SaveToFileMethodName><LoadFromFileMethodName>LoadFromFile</LoadFromFileMethodName><GenerateXMLAttributes>True</GenerateXMLAttributes><EnableEncoding>False</EnableEncoding><AutomaticProperties>False</AutomaticProperties><GenerateShouldSerialize>False</GenerateShouldSerialize><DisableDebug>False</DisableDebug><PropNameSpecified>Default</PropNameSpecified><Encoder>UTF8</Encoder><CustomUsings></CustomUsings><ExcludeIncludedTypes>False</ExcludeIncludedTypes><EnableInitializeFields>True</EnableInitializeFields>
''  </auto-generated>
'' ------------------------------------------------------------------------------
Imports System
Imports System.Diagnostics
Imports System.Xml.Serialization
Imports System.Collections
Imports System.Xml.Schema
Imports System.ComponentModel
Imports System.IO
Imports System.Text
Imports System.Collections.Generic

Namespace MobileConfigClass

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True), _
     System.Xml.Serialization.XmlRootAttribute([Namespace]:="", IsNullable:=False)> _
    Partial Public Class MobileConfig

        Private itemField As MobileConfigMobileMapConfig

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.itemField = New MobileConfigMobileMapConfig()
        End Sub

        <System.Xml.Serialization.XmlElementAttribute("MobileMapConfig", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Config() As MobileConfigMobileMapConfig
            Get
                Return Me.itemField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfig)
                Me.itemField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfig))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfig object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfig object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfig object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfig, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfig)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfig) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfig
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfig)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfig object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfig object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfig object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfig, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfig)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfig) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfig
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfig

        Private applicationSettingsField As MobileConfigMobileMapConfigApplicationSettings

        Private navigationOptionsField As MobileConfigMobileMapConfigNavigationOptions

        Private measureOptionsField As MobileConfigMobileMapConfigMeasureOptions

        Private layerOptionsField As MobileConfigMobileMapConfigLayerOptions

        Private editControlOptionsField As MobileConfigMobileMapConfigEditControlOptions

        Private servicePanelField As MobileConfigMobileMapConfigServicePanel

        Private searchPanelField As MobileConfigMobileMapConfigSearchPanel

        Private tOCPanelField As MobileConfigMobileMapConfigTOCPanel

        Private sketchPanelField As MobileConfigMobileMapConfigSketchPanel

        Private iDPanelField As MobileConfigMobileMapConfigIDPanel

        Private createFeaturePanelField As MobileConfigMobileMapConfigCreateFeaturePanel

        ' Private inspectionPanelField As MobileConfigMobileMapConfigInspectionPanel

        Private webPanelField As MobileConfigMobileMapConfigWebPanel

        '  Private activitiesPanelField As MobileConfigMobileMapConfigActivitiesPanel

        Private workorderPanelField As MobileConfigMobileMapConfigWorkorderPanel

        Private autoSyncerSettingsField As MobileConfigMobileMapConfigAutoSyncerSettings


        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.autoSyncerSettingsField = New MobileConfigMobileMapConfigAutoSyncerSettings()
            Me.workorderPanelField = New MobileConfigMobileMapConfigWorkorderPanel()
            ' Me.activitiesPanelField = New MobileConfigMobileMapConfigActivitiesPanel()
            Me.webPanelField = New MobileConfigMobileMapConfigWebPanel()
            ' Me.inspectionPanelField = New MobileConfigMobileMapConfigInspectionPanel()
            Me.createFeaturePanelField = New MobileConfigMobileMapConfigCreateFeaturePanel()
            Me.iDPanelField = New MobileConfigMobileMapConfigIDPanel()
            Me.sketchPanelField = New MobileConfigMobileMapConfigSketchPanel()
            Me.tOCPanelField = New MobileConfigMobileMapConfigTOCPanel()
            Me.searchPanelField = New MobileConfigMobileMapConfigSearchPanel()
            Me.servicePanelField = New MobileConfigMobileMapConfigServicePanel()
            Me.editControlOptionsField = New MobileConfigMobileMapConfigEditControlOptions()
            Me.layerOptionsField = New MobileConfigMobileMapConfigLayerOptions()
            Me.measureOptionsField = New MobileConfigMobileMapConfigMeasureOptions()
            Me.navigationOptionsField = New MobileConfigMobileMapConfigNavigationOptions()
            Me.applicationSettingsField = New MobileConfigMobileMapConfigApplicationSettings()
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property ApplicationSettings() As MobileConfigMobileMapConfigApplicationSettings
            Get
                Return Me.applicationSettingsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigApplicationSettings)
                Me.applicationSettingsField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property NavigationOptions() As MobileConfigMobileMapConfigNavigationOptions
            Get
                Return Me.navigationOptionsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigNavigationOptions)
                Me.navigationOptionsField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property MeasureOptions() As MobileConfigMobileMapConfigMeasureOptions
            Get
                Return Me.measureOptionsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigMeasureOptions)
                Me.measureOptionsField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property LayerOptions() As MobileConfigMobileMapConfigLayerOptions
            Get
                Return Me.layerOptionsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigLayerOptions)
                Me.layerOptionsField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property EditControlOptions() As MobileConfigMobileMapConfigEditControlOptions
            Get
                Return Me.editControlOptionsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigEditControlOptions)
                Me.editControlOptionsField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
        Public Property ServicePanel() As MobileConfigMobileMapConfigServicePanel
            Get
                Return Me.servicePanelField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigServicePanel)
                Me.servicePanelField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=6)> _
        Public Property SearchPanel() As MobileConfigMobileMapConfigSearchPanel
            Get
                Return Me.searchPanelField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigSearchPanel)
                Me.searchPanelField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=7)> _
        Public Property TOCPanel() As MobileConfigMobileMapConfigTOCPanel
            Get
                Return Me.tOCPanelField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigTOCPanel)
                Me.tOCPanelField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=8)> _
        Public Property SketchPanel() As MobileConfigMobileMapConfigSketchPanel
            Get
                Return Me.sketchPanelField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigSketchPanel)
                Me.sketchPanelField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=9)> _
        Public Property IDPanel() As MobileConfigMobileMapConfigIDPanel
            Get
                Return Me.iDPanelField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigIDPanel)
                Me.iDPanelField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=10)> _
        Public Property CreateFeaturePanel() As MobileConfigMobileMapConfigCreateFeaturePanel
            Get
                Return Me.createFeaturePanelField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigCreateFeaturePanel)
                Me.createFeaturePanelField = value
            End Set
        End Property

        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=11)> _
        'Public Property InspectionPanel() As MobileConfigMobileMapConfigInspectionPanel
        '    Get
        '        Return Me.inspectionPanelField
        '    End Get
        '    Set(ByVal value As MobileConfigMobileMapConfigInspectionPanel)
        '        Me.inspectionPanelField = value
        '    End Set
        'End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=12)> _
        Public Property WebPanel() As MobileConfigMobileMapConfigWebPanel
            Get
                Return Me.webPanelField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigWebPanel)
                Me.webPanelField = value
            End Set
        End Property

        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=13)> _
        'Public Property ActivitiesPanel() As MobileConfigMobileMapConfigActivitiesPanel
        '    Get
        '        Return Me.activitiesPanelField
        '    End Get
        '    Set(ByVal value As MobileConfigMobileMapConfigActivitiesPanel)
        '        Me.activitiesPanelField = value
        '    End Set
        'End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=14)> _
        Public Property WorkorderPanel() As MobileConfigMobileMapConfigWorkorderPanel
            Get
                Return Me.workorderPanelField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigWorkorderPanel)
                Me.workorderPanelField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=15)> _
        Public Property AutoSyncerSettings() As MobileConfigMobileMapConfigAutoSyncerSettings
            Get
                Return Me.autoSyncerSettingsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigAutoSyncerSettings)
                Me.autoSyncerSettingsField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfig))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfig object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfig object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfig object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfig, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfig)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfig) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfig
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfig)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfig object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfig object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfig object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfig, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfig)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfig) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfig
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigApplicationSettings

        Private splashLabelField As String

        Private splashImageField As String

        Private appImageField As String

        Private fontSizeField As String

        Private sideBarControlField As String

        Private copyrightTextField As String

        Private versionInfoField As String

        Private zoomExtentField As String

        Private multiLineThresholdField As MobileConfigMobileMapConfigApplicationSettingsMultiLineThreshold

        Private mapExportField As MobileConfigMobileMapConfigApplicationSettingsMapExport

        Private extentField As MobileConfigMobileMapConfigApplicationSettingsExtent


        Private uIComponentsField As MobileConfigMobileMapConfigApplicationSettingsUIComponents

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer
        Public Sub New()
            Me.mapExportField = New MobileConfigMobileMapConfigApplicationSettingsMapExport

        End Sub
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property SplashLabel() As String
            Get
                Return Me.splashLabelField
            End Get
            Set(ByVal value As String)
                Me.splashLabelField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property SplashImage() As String
            Get
                Return Me.splashImageField
            End Get
            Set(ByVal value As String)
                Me.splashImageField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property AppImage() As String
            Get
                Return Me.appImageField
            End Get
            Set(ByVal value As String)
                Me.appImageField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property FontSize() As String
            Get
                Return Me.fontSizeField
            End Get
            Set(ByVal value As String)
                Me.fontSizeField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property SideBarControl() As String
            Get
                Return Me.sideBarControlField
            End Get
            Set(ByVal value As String)
                Me.sideBarControlField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
        Public Property CopyrightText() As String
            Get
                Return Me.copyrightTextField
            End Get
            Set(ByVal value As String)
                Me.copyrightTextField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=6)> _
        Public Property VersionInfo() As String
            Get
                Return Me.versionInfoField
            End Get
            Set(ByVal value As String)
                Me.versionInfoField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=7)> _
        Public Property ZoomExtent() As String
            Get
                Return Me.zoomExtentField
            End Get
            Set(ByVal value As String)
                Me.zoomExtentField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=8)> _
        Public Property MultiLineThreshold() As MobileConfigMobileMapConfigApplicationSettingsMultiLineThreshold
            Get
                Return Me.multiLineThresholdField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigApplicationSettingsMultiLineThreshold)
                Me.multiLineThresholdField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=9)> _
        Public Property MapExport() As MobileConfigMobileMapConfigApplicationSettingsMapExport
            Get
                Return Me.mapExportField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigApplicationSettingsMapExport)
                Me.mapExportField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=10)> _
        Public Property Extent() As MobileConfigMobileMapConfigApplicationSettingsExtent
            Get
                Return Me.extentField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigApplicationSettingsExtent)
                Me.extentField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=11)> _
        Public Property UIComponents() As MobileConfigMobileMapConfigApplicationSettingsUIComponents
            Get
                Return Me.uIComponentsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigApplicationSettingsUIComponents)
                Me.uIComponentsField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigApplicationSettings))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigApplicationSettings object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigApplicationSettings object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigApplicationSettings object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettings, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigApplicationSettings)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettings) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigApplicationSettings
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigApplicationSettings)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigApplicationSettings object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigApplicationSettings object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigApplicationSettings object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettings, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigApplicationSettings)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettings) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigApplicationSettings
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
System.SerializableAttribute(), _
System.ComponentModel.DesignerCategoryAttribute("code"), _
System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigApplicationSettingsMultiLineThreshold


        Private sizeFactorField As String
        Private thresholdField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.Threshold = "125"
            Me.sizeFactorField = "3"

        End Sub

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Threshold() As String
            Get
                Return Me.thresholdField
            End Get
            Set(ByVal value As String)
                Me.thresholdField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property SizeFactor() As String
            Get
                Return Me.sizeFactorField
            End Get
            Set(ByVal value As String)
                Me.sizeFactorField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigApplicationSettingsMultiLineThreshold))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigApplicationSettingsMultiLineThreshold object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsMultiLineThreshold, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigApplicationSettingsMultiLineThreshold)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsMultiLineThreshold) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigApplicationSettingsMultiLineThreshold
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigApplicationSettingsMultiLineThreshold)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigApplicationSettingsMultiLineThreshold object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsMultiLineThreshold, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigApplicationSettingsMultiLineThreshold)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsMultiLineThreshold) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigApplicationSettingsMultiLineThreshold
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
System.SerializableAttribute(), _
System.ComponentModel.DesignerCategoryAttribute("code"), _
System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigApplicationSettingsMapExport


        Private visibleField As String
        Private mailClientField As String
        Private textToIncludeField As String
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.visibleField = "true"
            Me.mailClientField = "outlook"
            Me.textToIncludeField = ""
        End Sub

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property visible() As String
            Get
                Return Me.visibleField
            End Get
            Set(ByVal value As String)
                Me.visibleField = value
            End Set
        End Property
     
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property mailClient() As String
            Get
                Return Me.mailClientField
            End Get
            Set(ByVal value As String)
                Me.mailClientField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property textToInclude() As String
            Get
                Return Me.textToIncludeField
            End Get
            Set(ByVal value As String)
                Me.textToIncludeField = value
            End Set
        End Property
        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigApplicationSettingsMapExport))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigApplicationSettingsMapExport object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsMapExport, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigApplicationSettingsMapExport)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsMapExport) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigApplicationSettingsMapExport
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigApplicationSettingsMapExport)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigApplicationSettingsMapExport object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsMapExport, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigApplicationSettingsMapExport)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsMapExport) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigApplicationSettingsMapExport
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
  System.SerializableAttribute(), _
  System.ComponentModel.DesignerCategoryAttribute("code"), _
  System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigApplicationSettingsExtent

        Private initialExtentField As MobileConfigMobileMapConfigApplicationSettingsExtentInitialExtent
        Private fullExtentField As MobileConfigMobileMapConfigApplicationSettingsExtentFullExtent
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.initialExtentField = New MobileConfigMobileMapConfigApplicationSettingsExtentInitialExtent
            Me.fullExtentField = New MobileConfigMobileMapConfigApplicationSettingsExtentFullExtent
        End Sub

        <System.Xml.Serialization.XmlElementAttribute("InitialExtent", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property InitialExtent() As MobileConfigMobileMapConfigApplicationSettingsExtentInitialExtent
            Get
                Return Me.initialExtentField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigApplicationSettingsExtentInitialExtent)
                Me.initialExtentField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute("FullExtent", Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property fullExtent() As MobileConfigMobileMapConfigApplicationSettingsExtentFullExtent
            Get
                Return Me.fullExtentField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigApplicationSettingsExtentFullExtent)
                Me.fullExtentField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigApplicationSettingsExtent))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigApplicationSettingsExtent object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsExtent, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigApplicationSettingsExtent)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsExtent) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigApplicationSettingsExtent
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigApplicationSettingsExtent)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigApplicationSettingsExtent object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsExtent, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigApplicationSettingsExtent)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsExtent) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigApplicationSettingsExtent
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class


    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
System.SerializableAttribute(), _
System.ComponentModel.DesignerCategoryAttribute("code"), _
System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigApplicationSettingsExtentInitialExtent


        Private xminField As String
        Private xmaxField As String
        Private yminField As String
        Private ymaxField As String
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.xminField = ""
            Me.xmaxField = ""
            Me.yminField = ""
            Me.ymaxField = ""

        End Sub
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property xmin() As String
            Get
                Return Me.xminField
            End Get
            Set(ByVal value As String)
                Me.xminField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property xmax() As String
            Get
                Return Me.xmaxField
            End Get
            Set(ByVal value As String)
                Me.xmaxField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ymin() As String
            Get
                Return Me.yminField
            End Get
            Set(ByVal value As String)
                Me.yminField = value
            End Set
        End Property


        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ymax() As String
            Get
                Return Me.ymaxField
            End Get
            Set(ByVal value As String)
                Me.ymaxField = value
            End Set
        End Property
        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigApplicationSettingsExtentInitialExtent))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigApplicationSettingsExtentInitialExtent object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsExtentInitialExtent, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigApplicationSettingsExtentInitialExtent)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsExtentInitialExtent) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigApplicationSettingsExtentInitialExtent
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigApplicationSettingsExtentInitialExtent)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigApplicationSettingsExtentInitialExtent object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsExtentInitialExtent, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigApplicationSettingsExtentInitialExtent)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsExtentInitialExtent) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigApplicationSettingsExtentInitialExtent
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
  System.SerializableAttribute(), _
  System.ComponentModel.DesignerCategoryAttribute("code"), _
  System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigApplicationSettingsExtentFullExtent


        Private xminField As String
        Private xmaxField As String
        Private yminField As String
        Private ymaxField As String
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.xminField = ""
            Me.xmaxField = ""
            Me.yminField = ""
            Me.ymaxField = ""

        End Sub
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property xmin() As String
            Get
                Return Me.xminField
            End Get
            Set(ByVal value As String)
                Me.xminField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property xmax() As String
            Get
                Return Me.xmaxField
            End Get
            Set(ByVal value As String)
                Me.xmaxField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ymin() As String
            Get
                Return Me.yminField
            End Get
            Set(ByVal value As String)
                Me.yminField = value
            End Set
        End Property


        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ymax() As String
            Get
                Return Me.ymaxField
            End Get
            Set(ByVal value As String)
                Me.ymaxField = value
            End Set
        End Property
        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigApplicationSettingsExtentFullExtent))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigApplicationSettingsExtentFullExtent object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsExtentFullExtent, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigApplicationSettingsExtentFullExtent)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsExtentFullExtent) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigApplicationSettingsExtentFullExtent
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigApplicationSettingsExtentFullExtent)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigApplicationSettingsExtentFullExtent object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsExtentFullExtent, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigApplicationSettingsExtentFullExtent)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsExtentFullExtent) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigApplicationSettingsExtentFullExtent
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
System.SerializableAttribute(), _
System.ComponentModel.DesignerCategoryAttribute("code"), _
System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigApplicationSettingsUIComponents


        Private layerNotFoundField As String
        Private fieldNotFoundField As String
        Private yesTextField As String
        Private noTextField As String
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()

            Me.layerNotFoundField = "{0}"

            Me.fieldNotFoundField = "{0}{1}"
            Me.yesTextField = "Yes"
            Me.noTextField = "No"

        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property LayerNotFound() As String
            Get
                Return Me.layerNotFoundField
            End Get
            Set(ByVal value As String)
                Me.layerNotFoundField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property FieldNotFound() As String
            Get
                Return Me.fieldNotFoundField
            End Get
            Set(ByVal value As String)
                Me.fieldNotFoundField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property YesText() As String
            Get
                Return Me.yesTextField
            End Get
            Set(ByVal value As String)
                Me.yesTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property NoText() As String
            Get
                Return Me.noTextField
            End Get
            Set(ByVal value As String)
                Me.noTextField = value
            End Set
        End Property


        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigApplicationSettingsUIComponents))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigApplicationSettingsUIComponents object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsUIComponents, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigApplicationSettingsUIComponents)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsUIComponents) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigApplicationSettingsUIComponents
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigApplicationSettingsUIComponents)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigApplicationSettingsUIComponents object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsUIComponents, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigApplicationSettingsUIComponents)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigApplicationSettingsUIComponents) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigApplicationSettingsUIComponents
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigNavigationOptions

        Private gPSField As MobileConfigMobileMapConfigNavigationOptionsGPS

        Private zoomPanField As MobileConfigMobileMapConfigNavigationOptionsZoomPan

        Private bookmarksField As MobileConfigMobileMapConfigNavigationOptionsBookmarks

        Private arcLogisticsNavigatorField As MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator

        Private uIComponentsField As MobileConfigMobileMapConfigNavigationOptionsUIComponents

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.arcLogisticsNavigatorField = New MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator()
            Me.bookmarksField = New MobileConfigMobileMapConfigNavigationOptionsBookmarks()
            Me.zoomPanField = New MobileConfigMobileMapConfigNavigationOptionsZoomPan()
            Me.gPSField = New MobileConfigMobileMapConfigNavigationOptionsGPS()
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property GPS() As MobileConfigMobileMapConfigNavigationOptionsGPS
            Get
                Return Me.gPSField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigNavigationOptionsGPS)
                Me.gPSField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property ZoomPan() As MobileConfigMobileMapConfigNavigationOptionsZoomPan
            Get
                Return Me.zoomPanField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigNavigationOptionsZoomPan)
                Me.zoomPanField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property Bookmarks() As MobileConfigMobileMapConfigNavigationOptionsBookmarks
            Get
                Return Me.bookmarksField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigNavigationOptionsBookmarks)
                Me.bookmarksField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property ArcLogisticsNavigator() As MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator
            Get
                Return Me.arcLogisticsNavigatorField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator)
                Me.arcLogisticsNavigatorField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property UIComponents() As MobileConfigMobileMapConfigNavigationOptionsUIComponents
            Get
                Return Me.uIComponentsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigNavigationOptionsUIComponents)
                Me.uIComponentsField = value
            End Set
        End Property


        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigNavigationOptions))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigNavigationOptions object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigNavigationOptions object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigNavigationOptions object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptions, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigNavigationOptions)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptions) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigNavigationOptions
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigNavigationOptions)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigNavigationOptions object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigNavigationOptions object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigNavigationOptions object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptions, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigNavigationOptions)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptions) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigNavigationOptions
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigNavigationOptionsGPS

        Private visibleField As String

        Private cOMFileField As String

        Private gPSBaudField As String

        Private gPSTrackLogField As String

        Private gPSLogLayerField As String
        Private gPSLogLayer_UserNameFieldField As String
        Private gPSLogLayer_DateFieldField As String
        Private gPSLogLayer_TruncateAfterPostField As String

        Private gPSLogIntervalField As String

        Private gPSFixTypeField As String = 1
        Private gPSPDOPField As String = 25

        Private gPSPointAvgField As String = 1
        Private gPSPointAvgWaitIntervalField As String = 0.001
        Private gPSPointMaxTriesField As String = 200
        Private waypointControlField As MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl


        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer
        Public Sub New()
            waypointControlField = New MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl()

        End Sub
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Visible() As String
            Get
                Return Me.visibleField
            End Get
            Set(ByVal value As String)
                Me.visibleField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property COMFile() As String
            Get
                Return Me.cOMFileField
            End Get
            Set(ByVal value As String)
                Me.cOMFileField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property GPSBaud() As String
            Get
                Return Me.gPSBaudField
            End Get
            Set(ByVal value As String)
                Me.gPSBaudField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property GPSTrackLog() As String
            Get
                Return Me.gPSTrackLogField
            End Get
            Set(ByVal value As String)
                Me.gPSTrackLogField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property GPSLogLayer() As String
            Get
                Return Me.gPSLogLayerField
            End Get
            Set(ByVal value As String)
                Me.gPSLogLayerField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
        Public Property GPSLogInterval() As String
            Get
                Return Me.gPSLogIntervalField
            End Get
            Set(ByVal value As String)
                Me.gPSLogIntervalField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=6)> _
        Public Property GPSFixType() As String
            Get
                Return Me.gPSFixTypeField
            End Get
            Set(ByVal value As String)
                Me.gPSFixTypeField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=7)> _
        Public Property GPSPDOP() As String
            Get
                Return Me.gPSPDOPField
            End Get
            Set(ByVal value As String)
                Me.gPSPDOPField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=8)> _
        Public Property GPSPointAvg() As String
            Get
                Return Me.gPSPointAvgField
            End Get
            Set(ByVal value As String)
                Me.gPSPointAvgField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=9)> _
        Public Property GPSPointAvgWaitInterval() As String
            Get
                Return Me.gPSPointAvgWaitIntervalField
            End Get
            Set(ByVal value As String)
                Me.gPSPointAvgWaitIntervalField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=10)> _
        Public Property GPSPointMaxTries() As String
            Get
                Return Me.gPSPointMaxTriesField
            End Get
            Set(ByVal value As String)
                Me.gPSPointMaxTriesField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=11)> _
        Public Property WaypointControl() As MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl
            Get
                Return Me.waypointControlField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl)
                Me.waypointControlField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=12)> _
        Public Property GPSLogLayer_UserNameField() As String
            Get
                Return Me.gPSLogLayer_UserNameFieldField
            End Get
            Set(ByVal value As String)
                Me.gPSLogLayer_UserNameFieldField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=13)> _
        Public Property GPSLogLayer_DateField() As String
            Get
                Return Me.gPSLogLayer_DateFieldField
            End Get
            Set(ByVal value As String)
                Me.gPSLogLayer_DateFieldField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=14)> _
        Public Property GPSLogLayer_TruncateAfterPost() As String
            Get
                Return Me.gPSLogLayer_TruncateAfterPostField
            End Get
            Set(ByVal value As String)
                Me.gPSLogLayer_TruncateAfterPostField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigNavigationOptionsGPS))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigNavigationOptionsGPS object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigNavigationOptionsGPS object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigNavigationOptionsGPS object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsGPS, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigNavigationOptionsGPS)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsGPS) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigNavigationOptionsGPS
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigNavigationOptionsGPS)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigNavigationOptionsGPS object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigNavigationOptionsGPS object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigNavigationOptionsGPS object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsGPS, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigNavigationOptionsGPS)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsGPS) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigNavigationOptionsGPS
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
System.SerializableAttribute(), _
System.ComponentModel.DesignerCategoryAttribute("code"), _
System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl



        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer


        Private visibleField As String

        Private displayTextField As String

        Private statusBarMessageField As String

        Private DisplayUnitsField As String

        Public Sub New()
            MyBase.New()
            visibleField = False
            DisplayUnitsField = "Imperial"

        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Visible() As String
            Get
                Return Me.visibleField
            End Get
            Set(ByVal value As String)
                Me.visibleField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property DisplayText() As String
            Get
                Return Me.displayTextField
            End Get
            Set(ByVal value As String)
                Me.displayTextField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property StatusBarMessage() As String
            Get
                Return Me.statusBarMessageField
            End Get
            Set(ByVal value As String)
                Me.statusBarMessageField = value
            End Set
        End Property


        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property DisplayUnits() As String
            Get
                Return Me.DisplayUnitsField
            End Get
            Set(ByVal value As String)
                Me.DisplayUnitsField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigNavigationOptionsGPSWaypointControl
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class



    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigNavigationOptionsZoomPan

        Private fixZoomField As String
        Private panToolMessageField As String
        Private zoomInToolMessageField As String
        Private zoomOutToolMessageField As String
        Private zoomInOutToolMessageField As String
        Private rotateVisibleField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property FixZoom() As String
            Get
                Return Me.fixZoomField
            End Get
            Set(ByVal value As String)
                Me.fixZoomField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property PanToolMessage() As String
            Get
                Return Me.panToolMessageField
            End Get
            Set(ByVal value As String)
                Me.panToolMessageField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property ZoomInToolMessage() As String
            Get
                Return Me.zoomInToolMessageField
            End Get
            Set(ByVal value As String)
                Me.zoomInToolMessageField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property ZoomOutToolMessage() As String
            Get
                Return Me.zoomOutToolMessageField
            End Get
            Set(ByVal value As String)
                Me.zoomOutToolMessageField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property ZoomInOutToolMessage() As String
            Get
                Return Me.zoomInOutToolMessageField
            End Get
            Set(ByVal value As String)
                Me.zoomInOutToolMessageField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
        Public Property RotateVisible() As String
            Get
                Return Me.rotateVisibleField
            End Get
            Set(ByVal value As String)
                Me.rotateVisibleField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigNavigationOptionsZoomPan))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigNavigationOptionsZoomPan object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigNavigationOptionsZoomPan object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigNavigationOptionsZoomPan object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsZoomPan, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigNavigationOptionsZoomPan)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsZoomPan) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigNavigationOptionsZoomPan
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigNavigationOptionsZoomPan)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigNavigationOptionsZoomPan object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigNavigationOptionsZoomPan object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigNavigationOptionsZoomPan object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsZoomPan, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigNavigationOptionsZoomPan)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsZoomPan) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigNavigationOptionsZoomPan
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigNavigationOptionsBookmarks

        Private visibleField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Visible() As String
            Get
                Return Me.visibleField
            End Get
            Set(ByVal value As String)
                Me.visibleField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigNavigationOptionsBookmarks))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigNavigationOptionsBookmarks object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigNavigationOptionsBookmarks object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigNavigationOptionsBookmarks object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsBookmarks, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigNavigationOptionsBookmarks)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsBookmarks) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigNavigationOptionsBookmarks
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigNavigationOptionsBookmarks)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigNavigationOptionsBookmarks object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigNavigationOptionsBookmarks object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigNavigationOptionsBookmarks object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsBookmarks, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigNavigationOptionsBookmarks)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsBookmarks) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigNavigationOptionsBookmarks
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator

        Private installedField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Installed() As String
            Get
                Return Me.installedField
            End Get
            Set(ByVal value As String)
                Me.installedField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigNavigationOptionsArcLogisticsNavigator
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
System.SerializableAttribute(), _
System.ComponentModel.DesignerCategoryAttribute("code"), _
System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigNavigationOptionsUIComponents

        Private aLNNotInstalledField As String

        Private destinationNotFoundField As String

        Private PointsAvgTextField As String

        Private GPSNoConnectField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()

            Me.aLNNotInstalledField = ""
            Me.destinationNotFoundField = ""
            Me.PointsAvgTextField = ""
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property ALNNotInstalled() As String
            Get
                Return Me.aLNNotInstalledField
            End Get
            Set(ByVal value As String)
                Me.aLNNotInstalledField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property DestinationNotFound() As String
            Get
                Return Me.destinationNotFoundField
            End Get
            Set(ByVal value As String)
                Me.destinationNotFoundField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property PointsAvgText() As String
            Get
                Return Me.PointsAvgTextField
            End Get
            Set(ByVal value As String)
                Me.PointsAvgTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property GPSNoConnect() As String
            Get
                Return Me.GPSNoConnectField
            End Get
            Set(ByVal value As String)
                Me.GPSNoConnectField = value
            End Set
        End Property


        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigNavigationOptionsUIComponents))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigNavigationOptionsUIComponents object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsUIComponents, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigNavigationOptionsUIComponents)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsUIComponents) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigNavigationOptionsUIComponents
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigNavigationOptionsUIComponents)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigNavigationOptionsUIComponents object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsUIComponents, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigNavigationOptionsUIComponents)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigNavigationOptionsUIComponents) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigNavigationOptionsUIComponents
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigMeasureOptions

        Private visibleField As String
        Private toolMessageField As String

        Private measureMethodField As String

        Private measureUnitField As String

        Private measureLineColorField As String

        Private measureFontColorField As String

        Private measureWidthField As String

        Private measureSegmentMeasuresField As String

        Private measureSigDigitsField As String

        Private useGeodeticMeasureField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Visible() As String
            Get
                Return Me.visibleField
            End Get
            Set(ByVal value As String)
                Me.visibleField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property ToolMessage() As String
            Get
                Return Me.toolMessageField
            End Get
            Set(ByVal value As String)
                Me.toolMessageField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property MeasureMethod() As String
            Get
                Return Me.measureMethodField
            End Get
            Set(ByVal value As String)
                Me.measureMethodField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property MeasureUnit() As String
            Get
                Return Me.measureUnitField
            End Get
            Set(ByVal value As String)
                Me.measureUnitField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property MeasureLineColor() As String
            Get
                Return Me.measureLineColorField
            End Get
            Set(ByVal value As String)
                Me.measureLineColorField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
        Public Property MeasureFontColor() As String
            Get
                Return Me.measureFontColorField
            End Get
            Set(ByVal value As String)
                Me.measureFontColorField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=6)> _
        Public Property MeasureWidth() As String
            Get
                Return Me.measureWidthField
            End Get
            Set(ByVal value As String)
                Me.measureWidthField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=7)> _
        Public Property MeasureSegmentMeasures() As String
            Get
                Return Me.measureSegmentMeasuresField
            End Get
            Set(ByVal value As String)
                Me.measureSegmentMeasuresField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=8)> _
        Public Property MeasureSigDigits() As String
            Get
                Return Me.measureSigDigitsField
            End Get
            Set(ByVal value As String)
                Me.measureSigDigitsField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=9)> _
        Public Property UseGeodeticMeasure() As String
            Get
                Return Me.useGeodeticMeasureField
            End Get
            Set(ByVal value As String)
                Me.useGeodeticMeasureField = value
            End Set
        End Property


        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigMeasureOptions))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigMeasureOptions object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigMeasureOptions object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigMeasureOptions object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigMeasureOptions, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigMeasureOptions)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigMeasureOptions) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigMeasureOptions
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigMeasureOptions)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigMeasureOptions object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigMeasureOptions object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigMeasureOptions object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigMeasureOptions, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigMeasureOptions)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigMeasureOptions) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigMeasureOptions
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigLayerOptions

        Private mobileServicesField As MobileConfigMobileMapConfigLayerOptionsMobileServices

        Private cachedMapsField As MobileConfigMobileMapConfigLayerOptionsCachedMaps

        Private webMapsField As MobileConfigMobileMapConfigLayerOptionsWebMaps

        Private layerGroupingsField As MobileConfigMobileMapConfigLayerOptionsLayerGroupings

        Private showToggleField As String

        Private singleBaseMapField As String

        Private flowArrowsLayersField As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers

        Private LayersFieldOptionsField As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptions

        Private uIComponentsField As MobileConfigMobileMapConfigLayerOptionsUIComponents

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.layerGroupingsField = New MobileConfigMobileMapConfigLayerOptionsLayerGroupings()
            Me.webMapsField = New MobileConfigMobileMapConfigLayerOptionsWebMaps()
            Me.cachedMapsField = New MobileConfigMobileMapConfigLayerOptionsCachedMaps()
            Me.mobileServicesField = New MobileConfigMobileMapConfigLayerOptionsMobileServices()
            Me.flowArrowsLayersField = New MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers()
            Me.LayersFieldOptionsField = New MobileConfigMobileMapConfigLayerOptionsLayersFieldOptions()
            Me.uIComponentsField = New MobileConfigMobileMapConfigLayerOptionsUIComponents()
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property MobileServices() As MobileConfigMobileMapConfigLayerOptionsMobileServices
            Get
                Return Me.mobileServicesField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigLayerOptionsMobileServices)
                Me.mobileServicesField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property CachedMaps() As MobileConfigMobileMapConfigLayerOptionsCachedMaps
            Get
                Return Me.cachedMapsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigLayerOptionsCachedMaps)
                Me.cachedMapsField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property WebMaps() As MobileConfigMobileMapConfigLayerOptionsWebMaps
            Get
                Return Me.webMapsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigLayerOptionsWebMaps)
                Me.webMapsField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property LayerGroupings() As MobileConfigMobileMapConfigLayerOptionsLayerGroupings
            Get
                Return Me.layerGroupingsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigLayerOptionsLayerGroupings)
                Me.layerGroupingsField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property ShowToggle() As String
            Get
                Return Me.showToggleField
            End Get
            Set(ByVal value As String)
                Me.showToggleField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
        Public Property SingleBaseMap() As String
            Get
                Return Me.singleBaseMapField
            End Get
            Set(ByVal value As String)
                Me.singleBaseMapField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=6)> _
        Public Property FlowArrowsLayers() As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers
            Get
                Return Me.flowArrowsLayersField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers)
                Me.flowArrowsLayersField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=7)> _
        Public Property LayersFieldOptions() As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptions
            Get
                Return Me.LayersFieldOptionsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptions)
                Me.LayersFieldOptionsField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=8)> _
        Public Property UIComponents() As MobileConfigMobileMapConfigLayerOptionsUIComponents
            Get
                Return Me.uIComponentsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigLayerOptionsUIComponents)
                Me.uIComponentsField = value
            End Set
        End Property
        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigLayerOptions))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptions object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigLayerOptions object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptions object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptions, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptions)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptions) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigLayerOptions
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigLayerOptions)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptions object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigLayerOptions object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptions object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptions, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptions)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptions) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigLayerOptions
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
System.SerializableAttribute(), _
System.ComponentModel.DesignerCategoryAttribute("code"), _
System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigLayerOptionsUIComponents

        Private layerSpatialReferenceDontMatchField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer


        Public Sub New()
            MyBase.New()
            Me.layerSpatialReferenceDontMatchField = "Please set the layerSpatialReferenceDontMatchField Tag"

        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property LayerSpatialReferenceDontMatch() As String
            Get
                Return Me.layerSpatialReferenceDontMatchField
            End Get
            Set(ByVal value As String)
                Me.layerSpatialReferenceDontMatchField = value
            End Set
        End Property


        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigLayerOptionsUIComponents))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsUIComponents object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigLayerOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsUIComponents, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsUIComponents)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsUIComponents) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigLayerOptionsUIComponents
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigLayerOptionsUIComponents)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsUIComponents object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigLayerOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsUIComponents, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsUIComponents)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsUIComponents) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigLayerOptionsUIComponents
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class


    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigLayerOptionsMobileServices

        Private mobileServiceField As List(Of MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService)

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer
        Private xminField As String
        Private xmaxField As String
        Private yminField As String
        Private ymaxField As String
        Private limitQueryField As String


        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property LimitQuery() As String
            Get
                Return Me.limitQueryField
            End Get
            Set(ByVal value As String)
                Me.limitQueryField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property xmin() As String
            Get
                Return Me.xminField
            End Get
            Set(ByVal value As String)
                Me.xminField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property xmax() As String
            Get
                Return Me.xmaxField
            End Get
            Set(ByVal value As String)
                Me.xmaxField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ymin() As String
            Get
                Return Me.yminField
            End Get
            Set(ByVal value As String)
                Me.yminField = value
            End Set
        End Property


        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ymax() As String
            Get
                Return Me.ymaxField
            End Get
            Set(ByVal value As String)
                Me.ymaxField = value
            End Set
        End Property
        Public Sub New()
            MyBase.New()
            Me.mobileServiceField = New List(Of MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService)
            Me.xminField = ""
            Me.xmaxField = ""
            Me.yminField = ""
            Me.ymaxField = ""

        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=True, Order:=0)> _
        Public Property MobileService() As List(Of MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService)
            Get
                Return Me.mobileServiceField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService))
                Me.mobileServiceField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigLayerOptionsMobileServices))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsMobileServices object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigLayerOptionsMobileServices object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsMobileServices object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsMobileServices, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsMobileServices)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsMobileServices) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigLayerOptionsMobileServices
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigLayerOptionsMobileServices)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsMobileServices object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigLayerOptionsMobileServices object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsMobileServices object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsMobileServices, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsMobileServices)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsMobileServices) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigLayerOptionsMobileServices
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService

        Private storageLocationField As String
        Private userNameField As String = ""
        Private passwordField As String = ""
        Private domainField As String = ""
        Private tokenURLField As String = ""
        Private valueField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property StorageLocation() As String
            Get
                Return Me.storageLocationField
            End Get
            Set(ByVal value As String)
                Me.storageLocationField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property UserName() As String
            Get
                Return Me.userNameField
            End Get
            Set(ByVal value As String)
                Me.userNameField = value
            End Set
        End Property


        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Password() As String
            Get
                Return Me.passwordField
            End Get
            Set(ByVal value As String)
                Me.passwordField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Domain() As String
            Get
                Return Me.domainField
            End Get
            Set(ByVal value As String)
                Me.domainField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property TokenURL() As String
            Get
                Return Me.tokenURLField
            End Get
            Set(ByVal value As String)
                Me.tokenURLField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlTextAttribute()> _
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set(ByVal value As String)
                Me.valueField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigLayerOptionsMobileServicesMobileService
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigLayerOptionsCachedMaps

        Private cachedMapField As List(Of MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap)

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.cachedMapField = New List(Of MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap)
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=True, Order:=0)> _
        Public Property CachedMap() As List(Of MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap)
            Get
                Return Me.cachedMapField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap))
                Me.cachedMapField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigLayerOptionsCachedMaps))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsCachedMaps object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigLayerOptionsCachedMaps object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsCachedMaps object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsCachedMaps, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsCachedMaps)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsCachedMaps) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigLayerOptionsCachedMaps
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigLayerOptionsCachedMaps)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsCachedMaps object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigLayerOptionsCachedMaps object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsCachedMaps object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsCachedMaps, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsCachedMaps)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsCachedMaps) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigLayerOptionsCachedMaps
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap

        Private displayNameField As String

        Private valueField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property DisplayName() As String
            Get
                Return Me.displayNameField
            End Get
            Set(ByVal value As String)
                Me.displayNameField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlTextAttribute()> _
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set(ByVal value As String)
                Me.valueField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigLayerOptionsCachedMapsCachedMap
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigLayerOptionsWebMaps

        Private webMapField As List(Of MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap)

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.webMapField = New List(Of MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap)
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, IsNullable:=True, Order:=0)> _
        Public Property WebMap() As List(Of MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap)
            Get
                Return Me.webMapField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap))
                Me.webMapField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigLayerOptionsWebMaps))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsWebMaps object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigLayerOptionsWebMaps object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsWebMaps object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsWebMaps, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsWebMaps)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsWebMaps) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigLayerOptionsWebMaps
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigLayerOptionsWebMaps)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsWebMaps object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigLayerOptionsWebMaps object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsWebMaps object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsWebMaps, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsWebMaps)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsWebMaps) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigLayerOptionsWebMaps
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap

        Private displayNameField As String

        Private valueField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property DisplayName() As String
            Get
                Return Me.displayNameField
            End Get
            Set(ByVal value As String)
                Me.displayNameField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlTextAttribute()> _
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set(ByVal value As String)
                Me.valueField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigLayerOptionsWebMapsWebMap
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigLayerOptionsLayerGroupings


        Private layersGroupField As List(Of MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup)

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.layersGroupField = New List(Of MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup)

        End Sub


        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property LayersGroup() As List(Of MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup)
            Get
                Return Me.layersGroupField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup))
                Me.layersGroupField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigLayerOptionsLayerGroupings))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsLayerGroupings object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigLayerOptionsLayerGroupings object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsLayerGroupings object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayerGroupings, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsLayerGroupings)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayerGroupings) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigLayerOptionsLayerGroupings
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigLayerOptionsLayerGroupings)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsLayerGroupings object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigLayerOptionsLayerGroupings object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsLayerGroupings object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayerGroupings, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsLayerGroupings)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayerGroupings) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigLayerOptionsLayerGroupings
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers

        Private flowArrowsLayerField As List(Of MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer)

        Private buttonTextField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.flowArrowsLayerField = New List(Of MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer)
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property FlowArrowsLayer() As List(Of MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer)
            Get
                Return Me.flowArrowsLayerField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer))
                Me.flowArrowsLayerField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ButtonText() As String
            Get
                Return Me.buttonTextField
            End Get
            Set(ByVal value As String)
                Me.buttonTextField = value
            End Set
        End Property
        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayers
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer

        Private nameField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set(ByVal value As String)
                Me.nameField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsFlowArrowsLayersFlowArrowsLayer
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup

        Private layerGroupField As List(Of MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup)

        Private displayNameField As String

        Private visibleField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.layerGroupField = New List(Of MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup)
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property LayerGroup() As List(Of MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup)
            Get
                Return Me.layerGroupField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup))
                Me.layerGroupField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property DisplayName() As String
            Get
                Return Me.displayNameField
            End Get
            Set(ByVal value As String)
                Me.displayNameField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Visible() As String
            Get
                Return Me.visibleField
            End Get
            Set(ByVal value As String)
                Me.visibleField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroup
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup

        Private nameField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set(ByVal value As String)
                Me.nameField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigLayerOptionsLayerGroupingsLayersGroupLayerGroup
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
    System.SerializableAttribute(), _
    System.ComponentModel.DesignerCategoryAttribute("code"), _
    System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigLayerOptionsLayersFieldOptions


        Private LayerField As List(Of MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName)

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.LayerField = New List(Of MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName)

        End Sub


        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Layer() As List(Of MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName)
            Get
                Return Me.LayerField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName))
                Me.LayerField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigLayerOptionsLayersFieldOptions))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsLayerGroupings object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigLayerOptionsLayerGroupings object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsLayerGroupings object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptions, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsLayersFieldOptions)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptions) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptions
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigLayerOptionsLayersFieldOptions)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsLayerGroupings object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigLayerOptionsLayerGroupings object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsLayerGroupings object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptions, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsLayersFieldOptions)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptions) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptions
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName

        Private fieldField As List(Of MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption)

        Private nameField As String

        Private specialCaseField As String

        Private sketchModeField As String
        Private sketchColorField As String
        Private snapToField As String
        Private displayTextField As String




        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.fieldField = New List(Of MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption)()

            Me.nameField = ""

            Me.specialCaseField = ""

            Me.sketchModeField = ""
            Me.sketchColorField = ""
            Me.snapToField = ""
            Me.displayTextField = ""

        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Field() As List(Of MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption)
            Get
                Return Me.fieldField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption))
                Me.fieldField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set(ByVal value As String)
                Me.nameField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property SpecialCase() As String
            Get
                Return Me.specialCaseField
            End Get
            Set(ByVal value As String)
                Me.specialCaseField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property SketchMode() As String
            Get
                Return Me.sketchModeField
            End Get
            Set(ByVal value As String)
                Me.sketchModeField = value
            End Set
        End Property


        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property SketchColor() As String
            Get
                Return Me.sketchColorField
            End Get
            Set(ByVal value As String)
                Me.sketchColorField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property SnapTo() As String
            Get
                Return Me.snapToField
            End Get
            Set(ByVal value As String)
                Me.snapToField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property DisplayText() As String
            Get
                Return Me.displayTextField
            End Get
            Set(ByVal value As String)
                Me.displayTextField = value
            End Set
        End Property
        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Overloads Function Serialize(ByVal encoding As System.Text.Encoding) As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Dim xmlWriterSettings As System.Xml.XmlWriterSettings = New System.Xml.XmlWriterSettings()
                xmlWriterSettings.Encoding = encoding
                Dim xmlWriter As System.Xml.XmlWriter = xmlWriter.Create(memoryStream, xmlWriterSettings)
                Serializer.Serialize(xmlWriter, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        Public Overridable Overloads Function Serialize() As String
            Return Serialize(Encoding.UTF8)
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName, encoding)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            Return SaveToFile(fileName, Encoding.UTF8, exception)
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            SaveToFile(fileName, Encoding.UTF8)
        End Sub

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize(encoding)
                streamWriter = New System.IO.StreamWriter(fileName, False, encoding.UTF8)
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName)
            Try
                obj = LoadFromFile(fileName, encoding)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName, ByRef exception As System.Exception) As Boolean
            Return LoadFromFile(fileName, Encoding.UTF8, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName
            Return LoadFromFile(fileName, Encoding.UTF8)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding) As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerName
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file, encoding)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption

        Private nameField As String
        Private captionField As String
        Private backColorField As String = Nothing



        Private foreColorField As String
        Private boxColorField As String

        Private hyperFormatField As String

        Private visibleDefaultField As String

        Private optionsField As String


        Private visibleField As String

        Private behaviorField As String

        Private setReadOnlyField As String

        Private intersectLayerField As String

        Private intersectFieldField As String

        Private valueField As String


        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer




        Private filterFieldsField As List(Of MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields)




        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set(ByVal value As String)
                Me.nameField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Caption() As String
            Get
                Return Me.captionField
            End Get
            Set(ByVal value As String)
                Me.captionField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property BackColor() As String
            Get
                Return Me.backColorField
            End Get
            Set(ByVal value As String)
                Me.backColorField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ForeColor() As String
            Get
                Return Me.foreColorField
            End Get
            Set(ByVal value As String)
                Me.foreColorField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property BoxColor() As String
            Get
                Return Me.boxColorField
            End Get
            Set(ByVal value As String)
                Me.boxColorField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property HyperFormat() As String
            Get
                Return Me.hyperFormatField
            End Get
            Set(ByVal value As String)
                Me.hyperFormatField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property VisibleDefault() As String
            Get
                Return Me.visibleDefaultField
            End Get
            Set(ByVal value As String)
                Me.visibleDefaultField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Options() As String
            Get
                Return Me.optionsField
            End Get
            Set(ByVal value As String)
                Me.optionsField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property FilterFields() As List(Of MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields)
            Get
                Return Me.filterFieldsField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields))
                Me.filterFieldsField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Visible() As String
            Get
                Return Me.visibleField
            End Get
            Set(ByVal value As String)
                Me.visibleField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Behavior() As String
            Get
                Return Me.behaviorField
            End Get
            Set(ByVal value As String)
                Me.behaviorField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property SetReadOnly() As String
            Get
                Return Me.setReadOnlyField
            End Get
            Set(ByVal value As String)
                Me.setReadOnlyField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property IntersectLayer() As String
            Get
                Return Me.intersectLayerField
            End Get
            Set(ByVal value As String)
                Me.intersectLayerField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property IntersectField() As String
            Get
                Return Me.intersectFieldField
            End Get
            Set(ByVal value As String)
                Me.intersectFieldField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Value() As String
            Get
                Return Me.valueField
            End Get
            Set(ByVal value As String)
                Me.valueField = value
            End Set
        End Property


        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Overloads Function Serialize(ByVal encoding As System.Text.Encoding) As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Dim xmlWriterSettings As System.Xml.XmlWriterSettings = New System.Xml.XmlWriterSettings()
                xmlWriterSettings.Encoding = encoding
                Dim xmlWriter As System.Xml.XmlWriter = xmlWriter.Create(memoryStream, xmlWriterSettings)
                Serializer.Serialize(xmlWriter, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        Public Overridable Overloads Function Serialize() As String
            Return Serialize(Encoding.UTF8)
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName, encoding)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            Return SaveToFile(fileName, Encoding.UTF8, exception)
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            SaveToFile(fileName, Encoding.UTF8)
        End Sub

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize(encoding)
                streamWriter = New System.IO.StreamWriter(fileName, False, encoding.UTF8)
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption)
            Try
                obj = LoadFromFile(fileName, encoding)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption, ByRef exception As System.Exception) As Boolean
            Return LoadFromFile(fileName, Encoding.UTF8, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption
            Return LoadFromFile(fileName, Encoding.UTF8)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding) As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOption
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file, encoding)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
       System.SerializableAttribute(), _
       System.ComponentModel.DesignerCategoryAttribute("code"), _
       System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields



        'Private sqlValueField As String = ""
        Private visibilityField As String = "TRUE"
        Private modeField As String = ""

        '<System.Xml.Serialization.XmlAttributeAttribute()> _
        'Public Property sqlValue() As String
        '    Get
        '        Return Me.sqlValueField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.sqlValueField = value
        '    End Set
        'End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Visibility() As String
            Get
                Return Me.visibilityField
            End Get
            Set(ByVal value As String)
                Me.visibilityField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Mode() As String
            Get
                Return Me.modeField
            End Get
            Set(ByVal value As String)
                Me.modeField = value
            End Set
        End Property
        Private filterInfoField As List(Of MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo)
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property FilterInfo() As List(Of MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo)
            Get
                Return Me.filterInfoField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo))
                Me.filterInfoField = value
            End Set
        End Property
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Overloads Function Serialize(ByVal encoding As System.Text.Encoding) As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Dim xmlWriterSettings As System.Xml.XmlWriterSettings = New System.Xml.XmlWriterSettings()
                xmlWriterSettings.Encoding = encoding
                Dim xmlWriter As System.Xml.XmlWriter = xmlWriter.Create(memoryStream, xmlWriterSettings)
                Serializer.Serialize(xmlWriter, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        Public Overridable Overloads Function Serialize() As String
            Return Serialize(Encoding.UTF8)
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName, encoding)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            Return SaveToFile(fileName, Encoding.UTF8, exception)
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            SaveToFile(fileName, Encoding.UTF8)
        End Sub

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize(encoding)
                streamWriter = New System.IO.StreamWriter(fileName, False, encoding.UTF8)
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields)
            Try
                obj = LoadFromFile(fileName, encoding)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields, ByRef exception As System.Exception) As Boolean
            Return LoadFromFile(fileName, Encoding.UTF8, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields
            Return LoadFromFile(fileName, Encoding.UTF8)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding) As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFields
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file, encoding)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
    System.SerializableAttribute(), _
    System.ComponentModel.DesignerCategoryAttribute("code"), _
    System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo


        Private fieldNameField As String

        Private fieldValueField As List(Of String)

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property FieldValue() As List(Of String)

            Get
                Return Me.fieldValueField
            End Get
            Set(ByVal value As List(Of String)
)
                Me.fieldValueField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property FieldName() As String
            Get
                Return Me.fieldNameField
            End Get
            Set(ByVal value As String)
                Me.fieldNameField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Overloads Function Serialize(ByVal encoding As System.Text.Encoding) As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Dim xmlWriterSettings As System.Xml.XmlWriterSettings = New System.Xml.XmlWriterSettings()
                xmlWriterSettings.Encoding = encoding
                Dim xmlWriter As System.Xml.XmlWriter = xmlWriter.Create(memoryStream, xmlWriterSettings)
                Serializer.Serialize(xmlWriter, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        Public Overridable Overloads Function Serialize() As String
            Return Serialize(Encoding.UTF8)
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName, encoding)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            Return SaveToFile(fileName, Encoding.UTF8, exception)
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            SaveToFile(fileName, Encoding.UTF8)
        End Sub

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize(encoding)
                streamWriter = New System.IO.StreamWriter(fileName, False, encoding.UTF8)
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo)
            Try
                obj = LoadFromFile(fileName, encoding)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo, ByRef exception As System.Exception) As Boolean
            Return LoadFromFile(fileName, Encoding.UTF8, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo
            Return LoadFromFile(fileName, Encoding.UTF8)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding) As MobileConfigMobileMapConfigLayerOptionsLayersFieldOptionsLayerNameFieldOptionFilterFieldsFilterInfo
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file, encoding)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigEditControlOptions

        Private radioOnTwoField As String

        Private editFormExistingColorField As String

        Private editFormNewColorField As String

        Private layersField As MobileConfigMobileMapConfigEditControlOptionsLayers

        Private dateTimeDisplayFormatField As String

        Private logEditsField As String
        Private snapTolerenceField As String

        Private sketchLineWidthField As String
        Private sketchPointWidthField As String
        Private uIComponentsField As MobileConfigMobileMapConfigEditControlOptionsUIComponents

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.layersField = New MobileConfigMobileMapConfigEditControlOptionsLayers()
            'Me.autoFieldPopulationField = New MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation()
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property RadioOnTwo() As String
            Get
                Return Me.radioOnTwoField
            End Get
            Set(ByVal value As String)
                Me.radioOnTwoField = value
            End Set
        End Property



        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property EditFormExistingColor() As String
            Get
                Return Me.editFormExistingColorField
            End Get
            Set(ByVal value As String)
                Me.editFormExistingColorField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property EditFormNewColor() As String
            Get
                Return Me.editFormNewColorField
            End Get
            Set(ByVal value As String)
                Me.editFormNewColorField = value
            End Set
        End Property


        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property Layers() As MobileConfigMobileMapConfigEditControlOptionsLayers
            Get
                Return Me.layersField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigEditControlOptionsLayers)
                Me.layersField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property DateTimeDisplayFormat() As String
            Get
                Return Me.dateTimeDisplayFormatField
            End Get
            Set(ByVal value As String)
                Me.dateTimeDisplayFormatField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
        Public Property LogEdits() As String
            Get
                Return Me.logEditsField
            End Get
            Set(ByVal value As String)
                Me.logEditsField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=6)> _
        Public Property SnapTolerence() As String
            Get
                Return Me.snapTolerenceField
            End Get
            Set(ByVal value As String)
                Me.snapTolerenceField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=7)> _
        Public Property SketchLineWidth() As String
            Get
                Return Me.sketchLineWidthField
            End Get
            Set(ByVal value As String)
                Me.sketchLineWidthField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=8)> _
        Public Property SketchPointWidth() As String
            Get
                Return Me.sketchPointWidthField
            End Get
            Set(ByVal value As String)
                Me.sketchPointWidthField = value
            End Set
        End Property



        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=9)> _
        Public Property UIComponents() As MobileConfigMobileMapConfigEditControlOptionsUIComponents
            Get
                Return Me.uIComponentsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigEditControlOptionsUIComponents)
                Me.uIComponentsField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigEditControlOptions))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigEditControlOptions object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigEditControlOptions object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptions object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptions, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigEditControlOptions)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptions) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigEditControlOptions
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigEditControlOptions)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigEditControlOptions object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigEditControlOptions object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptions object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptions, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigEditControlOptions)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptions) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigEditControlOptions
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigEditControlOptionsLayers

        Private layerField As List(Of MobileConfigMobileMapConfigEditControlOptionsLayersLayer)



        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.layerField = New List(Of MobileConfigMobileMapConfigEditControlOptionsLayersLayer)
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Layer() As List(Of MobileConfigMobileMapConfigEditControlOptionsLayersLayer)
            Get
                Return Me.layerField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigEditControlOptionsLayersLayer))
                Me.layerField = value
            End Set
        End Property



        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigEditControlOptionsLayers))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigEditControlOptionsLayers object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigEditControlOptionsLayers object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsLayers object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptionsLayers, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigEditControlOptionsLayers)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptionsLayers) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigEditControlOptionsLayers
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigEditControlOptionsLayers)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigEditControlOptionsLayers object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigEditControlOptionsLayers object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsLayers object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptionsLayers, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigEditControlOptionsLayers)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptionsLayers) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigEditControlOptionsLayers
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigEditControlOptionsLayersLayer


        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.nameField = ""
            Me.sketchModeField = "Tap"
            Me.sketchColorField = "#FFFF0000"
            Me.snapToField = ""
            Me.displayTextField = ""
            Me.editExistingField = "FALSE"
            Me.allowNewField = "TRUE"
            Me.editOwnerFieldField = ""
            Me.deleteFeatureField = "FALSE"
            Me.fieldField = New List(Of MobileConfigMobileMapConfigEditControlOptionsLayersLayerField)
            Me.requiredbackColorField = ""
            Me.requiredforeColorField = ""
            Me.requiredboxColorField = ""
            Me.syncOnSaveField = 0

            'Me.oldbackColorField = ""
            'Me.oldforeColorField = ""
            'Me.oldboxColorField = ""
        End Sub


        Private fieldField As List(Of MobileConfigMobileMapConfigEditControlOptionsLayersLayerField)

        Private syncOnSaveField As String
        Private nameField As String
        Private sketchModeField As String
        Private sketchColorField As String
        Private snapToField As String
        Private displayTextField As String
        Private editExistingField As String
        Private allowNewField As String
        Private editOwnerFieldField As String
        Private editGeoField As String
        Private deleteFeatureField As String

        Private requiredbackColorField As String
        Private requiredforeColorField As String
        Private requiredboxColorField As String
        'Private oldbackColorField As String
        'Private oldforeColorField As String
        'Private oldboxColorField As String

        'Public Property OldBackColor() As String
        '    Get
        '        Return Me.oldbackColorField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.oldbackColorField = value
        '    End Set
        'End Property

        'Public Property OldForeColor() As String
        '    Get
        '        Return Me.oldforeColorField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.oldforeColorField = value
        '    End Set
        'End Property


        'Public Property OldBoxColor() As String
        '    Get
        '        Return Me.oldboxColorField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.oldboxColorField = value
        '    End Set


        'End Property


        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property SyncOnSave() As String
            Get
                Return Me.SyncOnSaveField
            End Get
            Set(ByVal value As String)
                Me.SyncOnSaveField = value
            End Set
        End Property



        <System.Xml.Serialization.XmlAttributeAttribute()> _
Public Property RequiredBackColor() As String
            Get
                Return Me.requiredbackColorField
            End Get
            Set(ByVal value As String)
                Me.requiredbackColorField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property RequiredForeColor() As String
            Get
                Return Me.requiredforeColorField
            End Get
            Set(ByVal value As String)
                Me.requiredforeColorField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property RequiredBoxColor() As String
            Get
                Return Me.requiredboxColorField
            End Get
            Set(ByVal value As String)
                Me.requiredboxColorField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set(ByVal value As String)
                Me.nameField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property SketchMode() As String
            Get
                Return Me.sketchModeField
            End Get
            Set(ByVal value As String)
                Me.sketchModeField = value
            End Set
        End Property


        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property SketchColor() As String
            Get
                Return Me.sketchColorField
            End Get
            Set(ByVal value As String)
                Me.sketchColorField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property SnapTo() As String
            Get
                Return Me.snapToField
            End Get
            Set(ByVal value As String)
                Me.snapToField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property DisplayText() As String
            Get
                Return Me.displayTextField
            End Get
            Set(ByVal value As String)
                Me.displayTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property EditExisting() As String
            Get
                Return Me.editExistingField
            End Get
            Set(ByVal value As String)
                Me.editExistingField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property AllowNew() As String
            Get
                Return Me.allowNewField
            End Get
            Set(ByVal value As String)
                Me.allowNewField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property EditOwnerField() As String
            Get
                Return Me.editOwnerFieldField
            End Get
            Set(ByVal value As String)
                Me.editOwnerFieldField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property DeleteFeature() As String
            Get
                Return Me.deleteFeatureField
            End Get
            Set(ByVal value As String)
                Me.deleteFeatureField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property EditGeo() As String
            Get
                Return Me.editGeoField
            End Get
            Set(ByVal value As String)
                Me.editGeoField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Field() As List(Of MobileConfigMobileMapConfigEditControlOptionsLayersLayerField)
            Get
                Return Me.fieldField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigEditControlOptionsLayersLayerField))
                Me.fieldField = value
            End Set
        End Property



        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigEditControlOptionsLayersLayer))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigEditControlOptionsLayersLayer object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigEditControlOptionsLayersLayer object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsLayersLayer object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptionsLayersLayer, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigEditControlOptionsLayersLayer)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptionsLayersLayer) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigEditControlOptionsLayersLayer
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigEditControlOptionsLayersLayer)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigEditControlOptionsLayersLayer object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigEditControlOptionsLayersLayer object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsLayersLayer object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptionsLayersLayer, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigEditControlOptionsLayersLayer)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptionsLayersLayer) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigEditControlOptionsLayersLayer
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    '    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
    '     System.SerializableAttribute(), _
    '     System.ComponentModel.DesignerCategoryAttribute("code"), _
    '     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    '    Partial Public Class MobileConfigMobileMapConfigEditControlOptionsLayersLayerField

    '        Private fieldField As List(Of MobileConfigMobileMapConfigEditControlOptionsLayersLayerField)

    '        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

    '        Public Sub New()
    '            MyBase.New()
    '            Me.fieldField = New List(Of MobileConfigMobileMapConfigEditControlOptionsLayersLayerField)
    '        End Sub

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
    '        Public Property Field() As List(Of MobileConfigMobileMapConfigEditControlOptionsLayersLayerField)
    '            Get
    '                Return Me.fieldField
    '            End Get
    '            Set(ByVal value As List(Of MobileConfigMobileMapConfigEditControlOptionsLayersLayerField))
    '                Me.fieldField = value
    '            End Set
    '        End Property

    '        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
    '            Get
    '                If (sSerializer Is Nothing) Then
    '                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigEditControlOptionsLayersLayerField))
    '                End If
    '                Return sSerializer
    '            End Get
    '        End Property

    '#Region "Serialize/Deserialize"
    '        '''<summary>
    '        '''Serializes current MobileConfigMobileMapConfigEditControlOptionsLayersLayerField object into an XML document
    '        '''</summary>
    '        '''<returns>string XML value</returns>
    '        Public Overridable Function Serialize() As String
    '            Dim streamReader As System.IO.StreamReader = Nothing
    '            Dim memoryStream As System.IO.MemoryStream = Nothing
    '            Try
    '                memoryStream = New System.IO.MemoryStream()
    '                Serializer.Serialize(memoryStream, Me)
    '                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
    '                streamReader = New System.IO.StreamReader(memoryStream)
    '                Return streamReader.ReadToEnd
    '            Finally
    '                If (Not (streamReader) Is Nothing) Then
    '                    streamReader.Dispose()
    '                End If
    '                If (Not (memoryStream) Is Nothing) Then
    '                    memoryStream.Dispose()
    '                End If
    '            End Try
    '        End Function

    '        '''<summary>
    '        '''Deserializes workflow markup into an MobileConfigMobileMapConfigEditControlOptionsLayersLayerField object
    '        '''</summary>
    '        '''<param name="xml">string workflow markup to deserialize</param>
    '        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsLayersLayerField object</param>
    '        '''<param name="exception">output Exception value if deserialize failed</param>
    '        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
    '        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptionsLayersLayerField, ByRef exception As System.Exception) As Boolean
    '            exception = Nothing
    '            obj = CType(Nothing, MobileConfigMobileMapConfigEditControlOptionsLayersLayerField)
    '            Try
    '                obj = Deserialize(xml)
    '                Return True
    '            Catch ex As System.Exception
    '                exception = ex
    '                Return False
    '            End Try
    '        End Function

    '        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptionsLayersLayerField) As Boolean
    '            Dim exception As System.Exception = Nothing
    '            Return Deserialize(xml, obj, exception)
    '        End Function

    '        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigEditControlOptionsLayersLayerField
    '            Dim stringReader As System.IO.StringReader = Nothing
    '            Try
    '                stringReader = New System.IO.StringReader(xml)
    '                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigEditControlOptionsLayersLayerField)
    '            Finally
    '                If (Not (stringReader) Is Nothing) Then
    '                    stringReader.Dispose()
    '                End If
    '            End Try
    '        End Function

    '        '''<summary>
    '        '''Serializes current MobileConfigMobileMapConfigEditControlOptionsLayersLayerField object into file
    '        '''</summary>
    '        '''<param name="fileName">full path of outupt xml file</param>
    '        '''<param name="exception">output Exception value if failed</param>
    '        '''<returns>true if can serialize and save into file; otherwise, false</returns>
    '        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
    '            exception = Nothing
    '            Try
    '                SaveToFile(fileName)
    '                Return True
    '            Catch e As System.Exception
    '                exception = e
    '                Return False
    '            End Try
    '        End Function

    '        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
    '            Dim streamWriter As System.IO.StreamWriter = Nothing
    '            Try
    '                Dim xmlString As String = Serialize()
    '                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
    '                streamWriter = xmlFile.CreateText
    '                streamWriter.WriteLine(xmlString)
    '                streamWriter.Close()
    '            Finally
    '                If (Not (streamWriter) Is Nothing) Then
    '                    streamWriter.Dispose()
    '                End If
    '            End Try
    '        End Sub

    '        '''<summary>
    '        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigEditControlOptionsLayersLayerField object
    '        '''</summary>
    '        '''<param name="fileName">string xml file to load and deserialize</param>
    '        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsLayersLayerField object</param>
    '        '''<param name="exception">output Exception value if deserialize failed</param>
    '        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
    '        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptionsLayersLayerField, ByRef exception As System.Exception) As Boolean
    '            exception = Nothing
    '            obj = CType(Nothing, MobileConfigMobileMapConfigEditControlOptionsLayersLayerField)
    '            Try
    '                obj = LoadFromFile(fileName)
    '                Return True
    '            Catch ex As System.Exception
    '                exception = ex
    '                Return False
    '            End Try
    '        End Function

    '        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptionsLayersLayerField) As Boolean
    '            Dim exception As System.Exception = Nothing
    '            Return LoadFromFile(fileName, obj, exception)
    '        End Function

    '        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigEditControlOptionsLayersLayerField
    '            Dim file As System.IO.FileStream = Nothing
    '            Dim sr As System.IO.StreamReader = Nothing
    '            Try
    '                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
    '                sr = New System.IO.StreamReader(file)
    '                Dim xmlString As String = sr.ReadToEnd
    '                sr.Close()
    '                file.Close()
    '                Return Deserialize(xmlString)
    '            Finally
    '                If (Not (file) Is Nothing) Then
    '                    file.Dispose()
    '                End If
    '                If (Not (sr) Is Nothing) Then
    '                    sr.Dispose()
    '                End If
    '            End Try
    '        End Function
    '#End Region
    '    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigEditControlOptionsLayersLayerField

        Private nameField As String

        Private onNewField As String

        Private onModifyField As String

        Private onNewReadOnlyField As String

        Private onModifyReadOnlyField As String

        Private intersectLayerField As String

        Private intersectFieldField As String

        Private valueTextField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set(ByVal value As String)
                Me.nameField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property OnNew() As String
            Get
                Return Me.onNewField
            End Get
            Set(ByVal value As String)
                Me.onNewField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property OnModify() As String
            Get
                Return Me.onModifyField
            End Get
            Set(ByVal value As String)
                Me.onModifyField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property OnNewReadOnly() As String
            Get
                Return Me.onNewReadOnlyField
            End Get
            Set(ByVal value As String)
                Me.onNewReadOnlyField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property OnModifyReadOnly() As String
            Get
                Return Me.onModifyReadOnlyField
            End Get
            Set(ByVal value As String)
                Me.onModifyReadOnlyField = value
            End Set
        End Property



        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property IntersectLayer() As String
            Get
                Return Me.intersectLayerField
            End Get
            Set(ByVal value As String)
                Me.intersectLayerField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property IntersectField() As String
            Get
                Return Me.intersectFieldField
            End Get
            Set(ByVal value As String)
                Me.intersectFieldField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ValueText() As String
            Get
                Return Me.valueTextField
            End Get
            Set(ByVal value As String)
                Me.valueTextField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigEditControlOptionsLayersLayerField))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigEditControlOptionsLayersLayerField object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigEditControlOptionsLayersLayerField object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsLayersLayerField object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptionsLayersLayerField, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigEditControlOptionsLayersLayerField)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptionsLayersLayerField) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigEditControlOptionsLayersLayerField
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigEditControlOptionsLayersLayerField)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigEditControlOptionsLayersLayerField object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigEditControlOptionsLayersLayerField object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsLayersLayerField object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptionsLayersLayerField, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigEditControlOptionsLayersLayerField)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptionsLayersLayerField) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigEditControlOptionsLayersLayerField
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
  System.SerializableAttribute(), _
  System.ComponentModel.DesignerCategoryAttribute("code"), _
  System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigEditControlOptionsUIComponents

        Private notSavedMessageField As String
        Private savedMessageField As String
        Private editingGeoMessageField As String

        Private onSaveRecordErrorMessageField As String
        Private layerNotEditableMessageField As String
        Private deleteMessageField As String
        Private noGeometryMessageField As String
        Private promptforDeleteField As String
        Private promptforSketchField As String
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.notSavedMessageField = "Please set the NotSavedMessage Tag"""
            Me.savedMessageField = "Please set the savedMessage Tag"""
            Me.editingGeoMessageField = "Please set the editingGeoMessage Tag"""
            Me.onSaveRecordErrorMessageField = "Please set the onSaveRecordErrorMessage Tag"""
            Me.layerNotEditableMessageField = "Please set the layerNotEditableMessage Tag"""
            Me.noGeometryMessageField = "Please set the NoGeometryMessage Tag"
            Me.promptforDeleteField = "Please set the PromptForDelete Tag"
            Me.promptforSketchField = "There are unsaved sketches, save?"
            Me.nullValueDropDownField = "<Null>"
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property NotSavedMessage() As String
            Get
                Return Me.notSavedMessageField
            End Get
            Set(ByVal value As String)
                Me.notSavedMessageField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property SavedMessage() As String
            Get
                Return Me.savedMessageField
            End Get
            Set(ByVal value As String)
                Me.savedMessageField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property EditingGeoMessage() As String
            Get
                Return Me.editingGeoMessageField
            End Get
            Set(ByVal value As String)
                Me.editingGeoMessageField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property OnSaveRecordErrorMessage() As String
            Get
                Return Me.onSaveRecordErrorMessageField
            End Get
            Set(ByVal value As String)
                Me.onSaveRecordErrorMessageField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property LayerNotEditableMessage() As String
            Get
                Return Me.layerNotEditableMessageField
            End Get
            Set(ByVal value As String)
                Me.layerNotEditableMessageField = value
            End Set
        End Property
        Private promptPictureMessageField As String

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
        Public Property PromptPictureMessage() As String
            Get
                Return Me.promptPictureMessageField
            End Get
            Set(ByVal value As String)
                Me.promptPictureMessageField = value
            End Set
        End Property
        Private promptPictureCameraField As String

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=6)> _
        Public Property PromptPictureCamera() As String
            Get
                Return Me.promptPictureCameraField
            End Get
            Set(ByVal value As String)
                Me.promptPictureCameraField = value
            End Set
        End Property
        Private promptPictureBrowseField As String

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=7)> _
        Public Property PromptPictureBrowse() As String
            Get
                Return Me.promptPictureBrowseField
            End Get
            Set(ByVal value As String)
                Me.promptPictureBrowseField = value
            End Set
        End Property
        Private nullValueDropDownField As String

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=8)> _
        Public Property NullValueDropDown() As String
            Get
                Return Me.nullValueDropDownField
            End Get
            Set(ByVal value As String)
                Me.nullValueDropDownField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=9)> _
        Public Property DeleteMessage() As String
            Get
                Return Me.deleteMessageField
            End Get
            Set(ByVal value As String)
                Me.deleteMessageField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=10)> _
        Public Property NoGeometryMessage() As String
            Get
                Return Me.noGeometryMessageField
            End Get
            Set(ByVal value As String)
                Me.noGeometryMessageField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=11)> _
        Public Property PromptForDelete() As String
            Get
                Return Me.promptforDeleteField
            End Get
            Set(ByVal value As String)
                Me.promptforDeleteField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=12)> _
        Public Property PromptForSaveSketch() As String
            Get
                Return Me.promptforSketchField
            End Get
            Set(ByVal value As String)
                Me.promptforSketchField = value
            End Set
        End Property
        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigEditControlOptionsUIComponents))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigEditControlOptionsUIComponents object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptionsUIComponents, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigEditControlOptionsUIComponents)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptionsUIComponents) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigEditControlOptionsUIComponents
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigEditControlOptionsUIComponents)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigEditControlOptionsUIComponents object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptionsUIComponents, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigEditControlOptionsUIComponents)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigEditControlOptionsUIComponents) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigEditControlOptionsUIComponents
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigServicePanel

        Private visibleField As String

        Private displayTextField As String

        Private statusBarMessageField As String

        Private monitorEditsField As String

        Private refreshListField As MobileConfigMobileMapConfigServicePanelRefreshList

        Private uIComponentsField As MobileConfigMobileMapConfigServicePanelUIComponents

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.refreshListField = New MobileConfigMobileMapConfigServicePanelRefreshList()
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Visible() As String
            Get
                Return Me.visibleField
            End Get
            Set(ByVal value As String)
                Me.visibleField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property DisplayText() As String
            Get
                Return Me.displayTextField
            End Get
            Set(ByVal value As String)
                Me.displayTextField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property StatusBarMessage() As String
            Get
                Return Me.statusBarMessageField
            End Get
            Set(ByVal value As String)
                Me.statusBarMessageField = value
            End Set
        End Property



        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property RefreshList() As MobileConfigMobileMapConfigServicePanelRefreshList
            Get
                Return Me.refreshListField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigServicePanelRefreshList)
                Me.refreshListField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property UIComponents() As MobileConfigMobileMapConfigServicePanelUIComponents
            Get
                Return Me.uIComponentsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigServicePanelUIComponents)
                Me.uIComponentsField = value
            End Set
        End Property


        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigServicePanel))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigServicePanel object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigServicePanel object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigServicePanel object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigServicePanel, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigServicePanel)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigServicePanel) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigServicePanel
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigServicePanel)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigServicePanel object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigServicePanel object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigServicePanel object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigServicePanel, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigServicePanel)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigServicePanel) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigServicePanel
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigServicePanelRefreshList

        Private refreshGroupField As List(Of MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup)
        Private showAllLayersField As String
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.refreshGroupField = New List(Of MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup)
            Me.showAllLayersField = "TRUE"

        End Sub
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ShowAllLayers() As String
            Get
                Return Me.showAllLayersField
            End Get
            Set(ByVal value As String)
                Me.showAllLayersField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property RefreshGroup() As List(Of MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup)
            Get
                Return Me.refreshGroupField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup))
                Me.refreshGroupField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigServicePanelRefreshList))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigServicePanelRefreshList object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigServicePanelRefreshList object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigServicePanelRefreshList object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigServicePanelRefreshList, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigServicePanelRefreshList)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigServicePanelRefreshList) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigServicePanelRefreshList
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigServicePanelRefreshList)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigServicePanelRefreshList object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigServicePanelRefreshList object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigServicePanelRefreshList object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigServicePanelRefreshList, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigServicePanelRefreshList)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigServicePanelRefreshList) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigServicePanelRefreshList
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup

        Private refreshLayerField As List(Of MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer)

        Private nameField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.refreshLayerField = New List(Of MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer)
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property RefreshLayer() As List(Of MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer)
            Get
                Return Me.refreshLayerField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer))
                Me.refreshLayerField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set(ByVal value As String)
                Me.nameField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroup
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer

        Private nameField As String
        Private extentField As String = "Current"
        Private whereClauseField As String = ""
        Private syncOnStartUpField As String = "false"
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property SyncOnStartUp() As String
            Get
                Return Me.syncOnStartUpField
            End Get
            Set(ByVal value As String)
                Me.syncOnStartUpField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set(ByVal value As String)
                Me.nameField = value
            End Set
        End Property


        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Extent() As String
            Get
                Return Me.extentField
            End Get
            Set(ByVal value As String)
                Me.extentField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property WhereClause() As String
            Get
                Return Me.whereClauseField
            End Get
            Set(ByVal value As String)
                Me.whereClauseField = value
            End Set
        End Property
        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigServicePanelRefreshListRefreshGroupRefreshLayer
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
System.SerializableAttribute(), _
System.ComponentModel.DesignerCategoryAttribute("code"), _
System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigServicePanelUIComponents

        Private editMonitorLabelField As String
        Private startedTextField As String
        Private canceledTextField As String
        Private finishedTextField As String
        Private errorTextField As String
        Private notValidTextField As String

        Private refreshAllLayersTextField As String
        Private processCompleteField As String
        Private processCompleteWithErrorField As String
        Private processStartedField As String
        Private cacheNotValidField As String
        Private uRLErrorField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.editMonitorLabelField = ""

            Me.startedTextField = ""
            Me.canceledTextField = ""
            Me.finishedTextField = ""
            Me.errorTextField = ""
            Me.notValidTextField = ""

            Me.refreshAllLayersTextField = ""
            Me.processCompleteField = ""
            Me.processCompleteWithErrorField = ""
            Me.processStartedField = ""
            Me.cacheNotValidField = ""

        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property EditMonitorLabel() As String
            Get
                Return Me.editMonitorLabelField
            End Get
            Set(ByVal value As String)
                Me.editMonitorLabelField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property StartedText() As String
            Get
                Return Me.startedTextField
            End Get
            Set(ByVal value As String)
                Me.startedTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property CanceledText() As String
            Get
                Return Me.canceledTextField
            End Get
            Set(ByVal value As String)
                Me.canceledTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property FinishedText() As String
            Get
                Return Me.finishedTextField
            End Get
            Set(ByVal value As String)
                Me.finishedTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property ErrorText() As String
            Get
                Return Me.errorTextField
            End Get
            Set(ByVal value As String)
                Me.errorTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
        Public Property NotValidText() As String
            Get
                Return Me.notValidTextField
            End Get
            Set(ByVal value As String)
                Me.notValidTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=6)> _
        Public Property RefreshAllLayersText() As String
            Get
                Return Me.refreshAllLayersTextField
            End Get
            Set(ByVal value As String)
                Me.refreshAllLayersTextField = value
            End Set
        End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=7)> _
        'Public Property RefreshConnectionError() As String
        '    Get
        '        Return Me.refreshConnectionErrorField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.refreshConnectionErrorField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=8)> _
        'Public Property RefreshConnectionNotAvail() As String
        '    Get
        '        Return Me.refreshConnectionNotAvailField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.refreshConnectionNotAvailField = value
        '    End Set
        'End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=7)> _
        Public Property ProcessComplete() As String
            Get
                Return Me.processCompleteField
            End Get
            Set(ByVal value As String)
                Me.processCompleteField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=8)> _
        Public Property ProcessCompleteWithError() As String
            Get
                Return Me.processCompleteWithErrorField
            End Get
            Set(ByVal value As String)
                Me.processCompleteWithErrorField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=9)> _
        Public Property ProcessStarted() As String
            Get
                Return Me.processStartedField
            End Get
            Set(ByVal value As String)
                Me.processStartedField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=10)> _
        Public Property CacheNotValid() As String
            Get
                Return Me.cacheNotValidField
            End Get
            Set(ByVal value As String)
                Me.cacheNotValidField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=11)> _
        Public Property URLError() As String
            Get
                Return Me.uRLErrorField
            End Get
            Set(ByVal value As String)
                Me.uRLErrorField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigServicePanelUIComponents))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigServicePanelUIComponents object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigServicePanelUIComponents, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigServicePanelUIComponents)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigServicePanelUIComponents) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigServicePanelUIComponents
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigServicePanelUIComponents)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigServicePanelUIComponents object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigServicePanelUIComponents, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigServicePanelUIComponents)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigServicePanelUIComponents) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigServicePanelUIComponents
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class



    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigSearchPanel

        Private visibleField As String

        Private displayTextField As String

        Private statusBarMessageField As String

        Private searchXYOneLineField As String

        Private searchDataLoadTypeField As String

        Private searchLayersField As MobileConfigMobileMapConfigSearchPanelSearchLayers

        Private drillDownSearchesField As MobileConfigMobileMapConfigSearchPanelDrillDownSearches

        Private addressSearchField As MobileConfigMobileMapConfigSearchPanelAddressSearch

        Private uIComponentsField As MobileConfigMobileMapConfigSearchPanelUIComponents

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.addressSearchField = New MobileConfigMobileMapConfigSearchPanelAddressSearch()
            Me.searchLayersField = New MobileConfigMobileMapConfigSearchPanelSearchLayers()
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Visible() As String
            Get
                Return Me.visibleField
            End Get
            Set(ByVal value As String)
                Me.visibleField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property DisplayText() As String
            Get
                Return Me.displayTextField
            End Get
            Set(ByVal value As String)
                Me.displayTextField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property StatusBarMessage() As String
            Get
                Return Me.statusBarMessageField
            End Get
            Set(ByVal value As String)
                Me.statusBarMessageField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property SearchXYOneLine() As String
            Get
                Return Me.searchXYOneLineField
            End Get
            Set(ByVal value As String)
                Me.searchXYOneLineField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property SearchDataLoadType() As String
            Get
                Return Me.searchDataLoadTypeField
            End Get
            Set(ByVal value As String)
                Me.searchDataLoadTypeField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
        Public Property SearchLayers() As MobileConfigMobileMapConfigSearchPanelSearchLayers
            Get
                Return Me.searchLayersField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigSearchPanelSearchLayers)
                Me.searchLayersField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=6)> _
        Public Property DrillDownSearches() As MobileConfigMobileMapConfigSearchPanelDrillDownSearches
            Get
                Return Me.drillDownSearchesField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigSearchPanelDrillDownSearches)
                Me.drillDownSearchesField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=7)> _
        Public Property AddressSearch() As MobileConfigMobileMapConfigSearchPanelAddressSearch
            Get
                Return Me.addressSearchField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigSearchPanelAddressSearch)
                Me.addressSearchField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=10)> _
        Public Property UIComponents() As MobileConfigMobileMapConfigSearchPanelUIComponents
            Get
                Return Me.uIComponentsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigSearchPanelUIComponents)
                Me.uIComponentsField = value
            End Set
        End Property
        Private areaSearchValuesField As MobileConfigMobileMapConfigSearchPanelAreaSearchValues

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=11)> _
        Public Property AreaSearchValues() As MobileConfigMobileMapConfigSearchPanelAreaSearchValues
            Get
                Return Me.areaSearchValuesField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigSearchPanelAreaSearchValues)
                Me.areaSearchValuesField = value
            End Set
        End Property


        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigSearchPanel))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanel object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigSearchPanel object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanel object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanel, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanel)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanel) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigSearchPanel
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigSearchPanel)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanel object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigSearchPanel object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanel object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanel, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanel)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanel) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigSearchPanel
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigSearchPanelSearchLayers

        Private searchLayerField As List(Of MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer)

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.searchLayerField = New List(Of MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer)
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property SearchLayer() As List(Of MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer)
            Get
                Return Me.searchLayerField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer))
                Me.searchLayerField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigSearchPanelSearchLayers))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelSearchLayers object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigSearchPanelSearchLayers object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelSearchLayers object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelSearchLayers, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelSearchLayers)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelSearchLayers) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigSearchPanelSearchLayers
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigSearchPanelSearchLayers)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelSearchLayers object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigSearchPanelSearchLayers object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelSearchLayers object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelSearchLayers, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelSearchLayers)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelSearchLayers) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigSearchPanelSearchLayers
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer

        Private nameField As String
        Private displayNameField As String
        Private fieldsField As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields

        Private defQueryField As String = ""
        Private xminField As String = ""
        Private xmaxField As String = ""
        Private yminField As String = ""
        Private ymaxField As String = ""
        Public Sub New()
            MyBase.New()

            Me.fieldsField = New MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields
        End Sub

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property xmin() As String
            Get
                Return Me.xminField
            End Get
            Set(ByVal value As String)
                Me.xminField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property xmax() As String
            Get
                Return Me.xmaxField
            End Get
            Set(ByVal value As String)
                Me.xmaxField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ymin() As String
            Get
                Return Me.yminField
            End Get
            Set(ByVal value As String)
                Me.yminField = value
            End Set
        End Property


        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ymax() As String
            Get
                Return Me.ymaxField
            End Get
            Set(ByVal value As String)
                Me.ymaxField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property DefQuery() As String
            Get
                Return Me.defQueryField
            End Get
            Set(ByVal value As String)
                Me.defQueryField = value
            End Set
        End Property

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set(ByVal value As String)
                Me.nameField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property DisplayName() As String
            Get
                Return Me.displayNameField
            End Get
            Set(ByVal value As String)
                Me.displayNameField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Fields() As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields
            Get
                Return Me.fieldsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields)
                Me.fieldsField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayer
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class


    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields

        Private fieldField As List(Of MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField)
        Public Sub New()
            MyBase.New()

            Me.fieldField = New List(Of MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField)
        End Sub
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Field() As List(Of MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField)
            Get
                Return Me.fieldField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField))
                Me.fieldField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFields
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class


    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField

        Private nameField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer
        Public Sub New()
            MyBase.New()


        End Sub
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set(ByVal value As String)
                Me.nameField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigSearchPanelSearchLayersSearchLayerFieldsField
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class




    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigSearchPanelDrillDownSearches


        Private drillDownSearchField As List(Of MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearch)

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.drillDownSearchField = New List(Of MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearch)
        End Sub


        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property DrillDownSearch() As List(Of MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearch)
            Get
                Return Me.drillDownSearchField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearch))
                Me.drillDownSearchField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigSearchPanelDrillDownSearches))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelAddressSearchAddressPointSearch object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigSearchPanelAddressSearchAddressPointSearch object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelAddressSearchAddressPointSearch object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelDrillDownSearches, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelDrillDownSearches)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelDrillDownSearches) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigSearchPanelDrillDownSearches
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigSearchPanelDrillDownSearches)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelAddressSearchAddressPointSearch object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigSearchPanelAddressSearchAddressPointSearch object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelAddressSearchAddressPointSearch object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelDrillDownSearches, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelDrillDownSearches)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelDrillDownSearches) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigSearchPanelDrillDownSearches
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
    System.SerializableAttribute(), _
    System.ComponentModel.DesignerCategoryAttribute("code"), _
    System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearch

        Private layerNameField As String
        Private defQueryField As String
        Private xminField As String = ""
        Private xmaxField As String = ""
        Private yminField As String = ""
        Private ymaxField As String = ""
        Private displayTextField As String = ""
      
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property DisplayText() As String
            Get
                If Me.displayTextField Is Nothing Then Return (Me.layerNameField)
                If Me.displayTextField = "" Then Return (Me.layerNameField)
                Return Me.displayTextField
            End Get
            Set(ByVal value As String)
                Me.displayTextField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property xmin() As String
            Get
                Return Me.xminField
            End Get
            Set(ByVal value As String)
                Me.xminField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property xmax() As String
            Get
                Return Me.xmaxField
            End Get
            Set(ByVal value As String)
                Me.xmaxField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ymin() As String
            Get
                Return Me.yminField
            End Get
            Set(ByVal value As String)
                Me.yminField = value
            End Set
        End Property


        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ymax() As String
            Get
                Return Me.ymaxField
            End Get
            Set(ByVal value As String)
                Me.ymaxField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property DefQuery() As String
            Get
                Return Me.defQueryField
            End Get
            Set(ByVal value As String)
                Me.defQueryField = value
            End Set
        End Property


        ' Private pointFieldsField As List(Of MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFields)
        Private pointFieldsField As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFields

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.pointFieldsField = New MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFields
            Me.displayTextField = ""

        End Sub

        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property LayerName() As String
            Get
                Return Me.layerNameField
            End Get
            Set(ByVal value As String)
                Me.layerNameField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property PointFields() As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFields
            Get
                Return Me.pointFieldsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFields)
                Me.pointFieldsField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearch))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelAddressSearchAddressPointSearch object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigSearchPanelAddressSearchAddressPointSearch object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelAddressSearchAddressPointSearch object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearch, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearch)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearch) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearch
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearch)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelAddressSearchAddressPointSearch object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigSearchPanelAddressSearchAddressPointSearch object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelAddressSearchAddressPointSearch object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearch, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearch)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearch) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearch
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFields

        Private pointFieldField As List(Of MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFieldsPointField)

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.pointFieldField = New List(Of MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFieldsPointField)
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property PointField() As List(Of MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFieldsPointField)
            Get
                Return Me.pointFieldField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFieldsPointField))
                Me.pointFieldField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFields))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelDrillDownSearches object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigSearchPanelDrillDownSearches object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelDrillDownSearches object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFields, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFields)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFields) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFields
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFields)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelDrillDownSearches object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigSearchPanelDrillDownSearches object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelDrillDownSearches object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFields, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFields)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFields) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFields
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFieldsPointField

        Private nameField As String
        Private displayTextField As String

        Private autoCompleteField As String
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer
        Public Sub New()
            Me.nameField = ""
            Me.displayTextField = ""
            Me.autoCompleteField = "false"

        End Sub
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set(ByVal value As String)
                Me.nameField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property DisplayText() As String
            Get
                Return Me.displayTextField
            End Get
            Set(ByVal value As String)
                Me.displayTextField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property AutoComplete() As String
            Get
                Return Me.autoCompleteField
            End Get
            Set(ByVal value As String)
                Me.autoCompleteField = value
            End Set
        End Property
        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFieldsPointField))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelDrillDownSearchesAddressPointField object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigSearchPanelDrillDownSearchesAddressPointField object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelDrillDownSearchesAddressPointField object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFieldsPointField, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFieldsPointField)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFieldsPointField) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFieldsPointField
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFieldsPointField)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelDrillDownSearchesAddressPointField object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigSearchPanelDrillDownSearchesAddressPointField object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelDrillDownSearchesAddressPointField object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFieldsPointField, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFieldsPointField)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFieldsPointField) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigSearchPanelDrillDownSearchesDrillDownSearchPointFieldsPointField
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigSearchPanelAddressSearch
        Private defQueryField As String
        Private xminField As String = ""
        Private xmaxField As String = ""
        Private yminField As String = ""
        Private ymaxField As String = ""

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property xmin() As String
            Get
                Return Me.xminField
            End Get
            Set(ByVal value As String)
                Me.xminField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property xmax() As String
            Get
                Return Me.xmaxField
            End Get
            Set(ByVal value As String)
                Me.xmaxField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ymin() As String
            Get
                Return Me.yminField
            End Get
            Set(ByVal value As String)
                Me.yminField = value
            End Set
        End Property


        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ymax() As String
            Get
                Return Me.ymaxField
            End Get
            Set(ByVal value As String)
                Me.ymaxField = value
            End Set
        End Property
        Private layerNameField As String

        Private nameFieldField As String

        Private lowerLeftField As String

        Private upperLeftField As String

        Private lowerRightField As String

        Private upperRightField As String

        Private prefilterFieldsField As MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields

        Private sDCField As MobileConfigMobileMapConfigSearchPanelAddressSearchSDC

        Private onlineServicesField As MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.sDCField = New MobileConfigMobileMapConfigSearchPanelAddressSearchSDC()
            Me.prefilterFieldsField = New MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields()
            Me.onlineServicesField = New MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices

        End Sub

        <System.Xml.Serialization.XmlAttributeAttribute()> _
         Public Property DefQuery() As String
            Get
                Return Me.defQueryField
            End Get
            Set(ByVal value As String)
                Me.defQueryField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property LayerName() As String
            Get
                Return Me.layerNameField
            End Get
            Set(ByVal value As String)
                Me.layerNameField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property NameField() As String
            Get
                Return Me.nameFieldField
            End Get
            Set(ByVal value As String)
                Me.nameFieldField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property LowerLeft() As String
            Get
                Return Me.lowerLeftField
            End Get
            Set(ByVal value As String)
                Me.lowerLeftField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property UpperLeft() As String
            Get
                Return Me.upperLeftField
            End Get
            Set(ByVal value As String)
                Me.upperLeftField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property LowerRight() As String
            Get
                Return Me.lowerRightField
            End Get
            Set(ByVal value As String)
                Me.lowerRightField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
        Public Property UpperRight() As String
            Get
                Return Me.upperRightField
            End Get
            Set(ByVal value As String)
                Me.upperRightField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=6)> _
        Public Property PrefilterFields() As MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields
            Get
                Return Me.prefilterFieldsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields)
                Me.prefilterFieldsField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=7)> _
        Public Property SDC() As MobileConfigMobileMapConfigSearchPanelAddressSearchSDC
            Get
                Return Me.sDCField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigSearchPanelAddressSearchSDC)
                Me.sDCField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=8)> _
        Public Property OnlineServices() As MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices
            Get
                Return Me.onlineServicesField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices)
                Me.onlineServicesField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigSearchPanelAddressSearch))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelAddressSearch object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigSearchPanelAddressSearch object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelAddressSearch object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearch, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelAddressSearch)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearch) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigSearchPanelAddressSearch
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigSearchPanelAddressSearch)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelAddressSearch object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigSearchPanelAddressSearch object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelAddressSearch object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearch, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelAddressSearch)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearch) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigSearchPanelAddressSearch
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields

        Private prefilterFieldField As List(Of MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField)

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.prefilterFieldField = New List(Of MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField)
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property PrefilterField() As List(Of MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField)
            Get
                Return Me.prefilterFieldField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField))
                Me.prefilterFieldField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFields
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField

        Private nameField As String
        Private displayTextField As String
        Private showAllField As String
        Private autoCompleteField As String

        Public Sub New()
            Me.nameField = ""
            Me.displayTextField = ""
            Me.showAllField = ""
            Me.autoCompleteField = "false"
        End Sub

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set(ByVal value As String)
                Me.nameField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property DisplayText() As String
            Get
                Return Me.displayTextField
            End Get
            Set(ByVal value As String)
                Me.displayTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property AutoComplete() As String
            Get
                Return Me.autoCompleteField
            End Get
            Set(ByVal value As String)
                Me.autoCompleteField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ShowAll() As String
            Get
                Return Me.showAllField
            End Get
            Set(ByVal value As String)
                Me.showAllField = value
            End Set
        End Property
        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigSearchPanelAddressSearchPrefilterFieldsPrefilterField
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigSearchPanelAddressSearchSDC

        Private pathField As String

        Private defaultStreetNumField As String

        Private defaultStreetNameField As String

        Private defaultCityField As String

        Private defaultStateField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Path() As String
            Get
                Return Me.pathField
            End Get
            Set(ByVal value As String)
                Me.pathField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property DefaultStreetNum() As String
            Get
                Return Me.defaultStreetNumField
            End Get
            Set(ByVal value As String)
                Me.defaultStreetNumField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property DefaultStreetName() As String
            Get
                Return Me.defaultStreetNameField
            End Get
            Set(ByVal value As String)
                Me.defaultStreetNameField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property DefaultCity() As String
            Get
                Return Me.defaultCityField
            End Get
            Set(ByVal value As String)
                Me.defaultCityField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property DefaultState() As String
            Get
                Return Me.defaultStateField
            End Get
            Set(ByVal value As String)
                Me.defaultStateField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigSearchPanelAddressSearchSDC))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelAddressSearchSDC object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigSearchPanelAddressSearchSDC object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelAddressSearchSDC object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearchSDC, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelAddressSearchSDC)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearchSDC) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigSearchPanelAddressSearchSDC
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigSearchPanelAddressSearchSDC)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelAddressSearchSDC object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigSearchPanelAddressSearchSDC object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelAddressSearchSDC object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearchSDC, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelAddressSearchSDC)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearchSDC) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigSearchPanelAddressSearchSDC
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
       System.SerializableAttribute(), _
       System.ComponentModel.DesignerCategoryAttribute("code"), _
       System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices

        Private geocodeField As MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer
        Public Sub New()
            Me.geocodeField = New MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode

        End Sub
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Geocode() As MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode
            Get
                Return Me.geocodeField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode)
                Me.geocodeField = value
            End Set
        End Property


        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServices
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode

        Private textToAddField As String
        Private gCUrlField As String
        Private singleLineFieldNameField As String
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer
        Public Sub New()
            Me.gCUrlField = ""
            Me.singleLineFieldNameField = "SingleLine"
        End Sub
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property TextToAdd() As String
            Get
                Return Me.textToAddField
            End Get
            Set(ByVal value As String)
                Me.textToAddField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property GCUrl() As String
            Get
                Return Me.gCUrlField
            End Get
            Set(ByVal value As String)
                Me.gCUrlField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property singleLineFieldName() As String
            Get
                Return Me.singleLineFieldNameField
            End Get
            Set(ByVal value As String)
                Me.singleLineFieldNameField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigSearchPanelAddressSearchOnlineServicesGeocode
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
System.SerializableAttribute(), _
System.ComponentModel.DesignerCategoryAttribute("code"), _
System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigSearchPanelUIComponents

        Private allTextField As String
        Private buttonShowTextField As String
        Private buttonFlashTextField As String
        Private buttonRouteTextField As String
        Private goToXYTextField As String
        Private xTextField As String
        Private yTextField As String
        Private latTextField As String
        Private longTextField As String
        Private goToXYButtonTextField As String
        Private goToXYLatLongTextField As String

        Private goToXYErrorTextField As String
        Private searchLayerLabelTextField As String
        Private searchFieldLabelTextField As String
        Private searchValueLabelTextField As String
        Private searchSimilarLabelTextField As String
        Private searchButtonTextField As String
        Private searchResultsTextField As String
        Private intersectionPreFilterLabelTextField As String
        Private intersectionPrimaryLabelTextField As String
        Private intersectionIntersectingLabelTextField As String
        Private intersectionRangeLabelTextField As String
        Private intersectionZoomToButtonTextField As String
        Private intersectionReloadButtonTextField As String
        Private drillDownZoomToButtonTextField As String
        Private drillDownResultsTextField As String
        Private geocodePreFilterLabelTextField As String
        Private geocodeAddressLabelTextField As String
        Private geocodeLookupButtonTextField As String
        Private geocodeResultsTextField As String
        Private latLongCheckedField As String


        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()

            Me.allTextField = ""
            Me.buttonShowTextField = ""
            Me.buttonFlashTextField = ""
            Me.buttonRouteTextField = ""
            Me.goToXYTextField = ""
            Me.goToXYErrorTextField = ""
            Me.xTextField = ""
            Me.yTextField = ""
            Me.latTextField = ""
            Me.longTextField = ""
            Me.goToXYButtonTextField = ""
            Me.goToXYLatLongTextField = ""
            Me.latLongCheckedField = ""
            Me.searchLayerLabelTextField = ""
            Me.searchFieldLabelTextField = ""
            Me.searchValueLabelTextField = ""
            Me.searchSimilarLabelTextField = ""
            Me.searchButtonTextField = ""
            Me.searchResultsTextField = ""
            Me.intersectionPreFilterLabelTextField = ""
            Me.intersectionPrimaryLabelTextField = ""
            Me.intersectionIntersectingLabelTextField = ""
            Me.intersectionRangeLabelTextField = ""
            Me.intersectionZoomToButtonTextField = ""
            Me.intersectionReloadButtonTextField = ""
            Me.drillDownZoomToButtonTextField = ""
            Me.drillDownResultsTextField = ""
            Me.geocodePreFilterLabelTextField = ""
            Me.geocodeAddressLabelTextField = ""
            Me.geocodeLookupButtonTextField = ""
            Me.geocodeResultsTextField = ""
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property AllText() As String
            Get
                Return Me.allTextField
            End Get
            Set(ByVal value As String)
                Me.allTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property ButtonShowText() As String
            Get
                Return Me.buttonShowTextField
            End Get
            Set(ByVal value As String)
                Me.buttonShowTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property ButtonFlashText() As String
            Get
                Return Me.buttonFlashTextField
            End Get
            Set(ByVal value As String)
                Me.buttonFlashTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property ButtonRouteText() As String
            Get
                Return Me.buttonRouteTextField
            End Get
            Set(ByVal value As String)
                Me.buttonRouteTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property GoToXYText() As String
            Get
                Return Me.goToXYTextField
            End Get
            Set(ByVal value As String)
                Me.goToXYTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
        Public Property XText() As String
            Get
                Return Me.xTextField
            End Get
            Set(ByVal value As String)
                Me.xTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=6)> _
        Public Property YText() As String
            Get
                Return Me.yTextField
            End Get
            Set(ByVal value As String)
                Me.yTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=7)> _
        Public Property LongText() As String
            Get
                Return Me.longTextField
            End Get
            Set(ByVal value As String)
                Me.longTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=8)> _
        Public Property LatText() As String
            Get
                Return Me.latTextField
            End Get
            Set(ByVal value As String)
                Me.latTextField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=9)> _
        Public Property GoToXYButtonText() As String
            Get
                Return Me.goToXYButtonTextField
            End Get
            Set(ByVal value As String)
                Me.goToXYButtonTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=10)> _
        Public Property GoToXYLatLongText() As String
            Get
                Return Me.goToXYLatLongTextField
            End Get
            Set(ByVal value As String)
                Me.goToXYLatLongTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=11)> _
        Public Property GoToXYErrorText() As String
            Get
                Return Me.goToXYErrorTextField
            End Get
            Set(ByVal value As String)
                Me.goToXYErrorTextField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=12)> _
        Public Property LatLongChecked() As String
            Get
                Return Me.latLongCheckedField
            End Get
            Set(ByVal value As String)
                Me.latLongCheckedField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=13)> _
        Public Property SearchLayerLabelText() As String
            Get
                Return Me.searchLayerLabelTextField
            End Get
            Set(ByVal value As String)
                Me.searchLayerLabelTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=14)> _
        Public Property SearchFieldLabelText() As String
            Get
                Return Me.searchFieldLabelTextField
            End Get
            Set(ByVal value As String)
                Me.searchFieldLabelTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=15)> _
        Public Property SearchValueLabelText() As String
            Get
                Return Me.searchValueLabelTextField
            End Get
            Set(ByVal value As String)
                Me.searchValueLabelTextField = value
            End Set
        End Property
        Private searchBufferLabelTextField As String
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=16)> _
        Public Property SearchBufferLabelText() As String
            Get
                Return Me.searchBufferLabelTextField
            End Get
            Set(ByVal value As String)
                Me.searchBufferLabelTextField = value
            End Set
        End Property


        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=17)> _
        Public Property SearchSimilarLabelText() As String
            Get
                Return Me.searchSimilarLabelTextField
            End Get
            Set(ByVal value As String)
                Me.searchSimilarLabelTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=18)> _
        Public Property SearchButtonText() As String
            Get
                Return Me.searchButtonTextField
            End Get
            Set(ByVal value As String)
                Me.searchButtonTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=19)> _
        Public Property SearchResultsText() As String
            Get
                Return Me.searchResultsTextField
            End Get
            Set(ByVal value As String)
                Me.searchResultsTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=20)> _
        Public Property IntersectionPreFilterLabelText() As String
            Get
                Return Me.intersectionPreFilterLabelTextField
            End Get
            Set(ByVal value As String)
                Me.intersectionPreFilterLabelTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=21)> _
        Public Property IntersectionPrimaryLabelText() As String
            Get
                Return Me.intersectionPrimaryLabelTextField
            End Get
            Set(ByVal value As String)
                Me.intersectionPrimaryLabelTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=22)> _
        Public Property IntersectionIntersectingLabelText() As String
            Get
                Return Me.intersectionIntersectingLabelTextField
            End Get
            Set(ByVal value As String)
                Me.intersectionIntersectingLabelTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=23)> _
        Public Property IntersectionRangeLabelText() As String
            Get
                Return Me.intersectionRangeLabelTextField
            End Get
            Set(ByVal value As String)
                Me.intersectionRangeLabelTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=24)> _
        Public Property IntersectionZoomToButtonText() As String
            Get
                Return Me.intersectionZoomToButtonTextField
            End Get
            Set(ByVal value As String)
                Me.intersectionZoomToButtonTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=25)> _
        Public Property IntersectionReloadButtonText() As String
            Get
                Return Me.intersectionReloadButtonTextField
            End Get
            Set(ByVal value As String)
                Me.intersectionReloadButtonTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=26)> _
        Public Property DrillDownZoomToButtonText() As String
            Get
                Return Me.drillDownZoomToButtonTextField
            End Get
            Set(ByVal value As String)
                Me.drillDownZoomToButtonTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=27)> _
        Public Property DrillDownResultsText() As String
            Get
                Return Me.drillDownResultsTextField
            End Get
            Set(ByVal value As String)
                Me.drillDownResultsTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=28)> _
        Public Property GeocodePreFilterLabelText() As String
            Get
                Return Me.geocodePreFilterLabelTextField
            End Get
            Set(ByVal value As String)
                Me.geocodePreFilterLabelTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=29)> _
        Public Property GeocodeAddressLabelText() As String
            Get
                Return Me.geocodeAddressLabelTextField
            End Get
            Set(ByVal value As String)
                Me.geocodeAddressLabelTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=30)> _
        Public Property GeocodeLookupButtonText() As String
            Get
                Return Me.geocodeLookupButtonTextField
            End Get
            Set(ByVal value As String)
                Me.geocodeLookupButtonTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=31)> _
        Public Property GeocodeResultsText() As String
            Get
                Return Me.geocodeResultsTextField
            End Get
            Set(ByVal value As String)
                Me.geocodeResultsTextField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigSearchPanelUIComponents))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelUIComponents object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelUIComponents, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelUIComponents)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelUIComponents) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigSearchPanelUIComponents
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigSearchPanelUIComponents)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelUIComponents object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelUIComponents, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelUIComponents)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelUIComponents) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigSearchPanelUIComponents
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
    System.SerializableAttribute(), _
    System.ComponentModel.DesignerCategoryAttribute("code"), _
    System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigSearchPanelAreaSearchValues

        Private pointSizeField As String
        Private pointColorField As String
        Private areaColorField As String
        'Private noBufferValueField As String
        Private areaSearchValueField As List(Of MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue)
        Public Sub New()
            MyBase.New()
            Me.pointSizeField = "12"
            Me.pointColorField = "#FFFF0000"
            Me.areaColorField = "#FFFF0000"
            Me.areaSearchValueField = New List(Of MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue)
        End Sub
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        '<System.Xml.Serialization.XmlAttributeAttribute()> _
        'Public Property NoBufferValue() As String
        '    Get
        '        Return Me.noBufferValueField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.noBufferValueField = value
        '    End Set
        'End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property PointSize() As String
            Get
                Return Me.pointSizeField
            End Get
            Set(ByVal value As String)
                Me.pointSizeField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property PointColor() As String
            Get
                Return Me.pointColorField
            End Get
            Set(ByVal value As String)
                Me.pointColorField = value
            End Set
        End Property


        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property AreaColor() As String
            Get
                Return Me.areaColorField
            End Get
            Set(ByVal value As String)
                Me.areaColorField = value
            End Set
        End Property


        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property AreaSearchValue() As List(Of MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue)
            Get
                Return Me.areaSearchValueField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue))
                Me.areaSearchValueField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigSearchPanelAreaSearchValues))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelAreaSearchValues object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigSearchPanelAreaSearchValues object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelAreaSearchValues object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAreaSearchValues, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelAreaSearchValues)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAreaSearchValues) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigSearchPanelAreaSearchValues
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigSearchPanelAreaSearchValues)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelAreaSearchValues object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigSearchPanelAreaSearchValues object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelAreaSearchValues object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAreaSearchValues, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelAreaSearchValues)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAreaSearchValues) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigSearchPanelAreaSearchValues
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
  System.SerializableAttribute(), _
  System.ComponentModel.DesignerCategoryAttribute("code"), _
  System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue

        Private areaSizeField As String
        Private displayField As String
        Public Sub New()
            MyBase.New()
            Me.areaSizeField = ""
            Me.displayField = ""
        End Sub
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Display() As String
            Get
                Return Me.displayField
            End Get
            Set(ByVal value As String)
                Me.displayField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property AreaSize() As String
            Get
                Return Me.areaSizeField
            End Get
            Set(ByVal value As String)
                Me.areaSizeField = value
            End Set
        End Property


        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigSearchPanelAreaSearchValuesSearchValue
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class


    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigTOCPanel

        Private visibleField As String

        Private displayTextField As String

        Private statusBarMessageField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Visible() As String
            Get
                Return Me.visibleField
            End Get
            Set(ByVal value As String)
                Me.visibleField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property DisplayText() As String
            Get
                Return Me.displayTextField
            End Get
            Set(ByVal value As String)
                Me.displayTextField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property StatusBarMessage() As String
            Get
                Return Me.statusBarMessageField
            End Get
            Set(ByVal value As String)
                Me.statusBarMessageField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigTOCPanel))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigTOCPanel object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigTOCPanel object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigTOCPanel object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigTOCPanel, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigTOCPanel)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigTOCPanel) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigTOCPanel
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigTOCPanel)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigTOCPanel object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigTOCPanel object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigTOCPanel object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigTOCPanel, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigTOCPanel)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigTOCPanel) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigTOCPanel
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigSketchPanel

        Private visibleField As String

        Private displayTextField As String

        Private statusBarMessageField As String

        Private uIComponentsField As MobileConfigMobileMapConfigSketchPanelUIComponents
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=10)> _
        Public Property UIComponents() As MobileConfigMobileMapConfigSketchPanelUIComponents
            Get
                Return Me.uIComponentsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigSketchPanelUIComponents)
                Me.uIComponentsField = value
            End Set
        End Property


        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Visible() As String
            Get
                Return Me.visibleField
            End Get
            Set(ByVal value As String)
                Me.visibleField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property DisplayText() As String
            Get
                Return Me.displayTextField
            End Get
            Set(ByVal value As String)
                Me.displayTextField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property StatusBarMessage() As String
            Get
                Return Me.statusBarMessageField
            End Get
            Set(ByVal value As String)
                Me.statusBarMessageField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigSketchPanel))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSketchPanel object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigSketchPanel object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSketchPanel object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSketchPanel, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSketchPanel)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSketchPanel) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigSketchPanel
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigSketchPanel)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSketchPanel object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigSketchPanel object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigSketchPanel object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSketchPanel, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSketchPanel)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSketchPanel) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigSketchPanel
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
System.SerializableAttribute(), _
System.ComponentModel.DesignerCategoryAttribute("code"), _
System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigSketchPanelUIComponents

        Private toolsTextField As String
        Private selectTextField As String
        Private lineTextField As String
        Private polylineTextField As String
        Private textTextField As String
        Private textPromptTextField As String
        Private freehandTextField As String


        Private optionsTextField As String
        Private block1TextField As String
        Private block2TextField As String
        Private block3TextField As String
        Private block4TextField As String
        Private block5TextField As String

        Private labelSketchTextField As String

        Private backColorTextField As String
        Private gridLineColorTextField As String
        Private drawingColorTextField As String

        Private gridTextField As String
        Private smallestTextField As String
        Private smallTextField As String
        Private normalTextField As String
        Private largeTextField As String
        Private largerTextField As String
        Private largestTextField As String

        Private editTextField As String
        Private undoTextField As String
        Private redoTextField As String
        Private deleteTextField As String
        Private clearTextField As String

        Private saveTextField As String




        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()

            Me.toolsTextField = ""
            Me.selectTextField = ""
            Me.lineTextField = ""
            Me.polylineTextField = ""
            Me.textTextField = ""
            Me.textPromptTextField = ""
            Me.freehandTextField = ""
            Me.optionsTextField = ""
            Me.block1TextField = ""
            Me.block2TextField = ""
            Me.block3TextField = ""
            Me.block4TextField = ""
            Me.block5TextField = ""
            Me.labelSketchTextField = ""
            Me.backColorTextField = ""
            Me.gridLineColorTextField = ""
            Me.drawingColorTextField = ""
            Me.gridTextField = ""
            Me.smallestTextField = ""
            Me.smallTextField = ""
            Me.normalTextField = ""
            Me.largeTextField = ""
            Me.largerTextField = ""
            Me.largestTextField = ""
            Me.editTextField = ""
            Me.undoTextField = ""
            Me.redoTextField = ""
            Me.deleteTextField = ""
            Me.clearTextField = ""
            Me.saveTextField = ""
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property ToolsText() As String
            Get
                Return Me.toolsTextField
            End Get
            Set(ByVal value As String)
                Me.toolsTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property SelectText() As String
            Get
                Return Me.selectTextField
            End Get
            Set(ByVal value As String)
                Me.selectTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property LineText() As String
            Get
                Return Me.lineTextField
            End Get
            Set(ByVal value As String)
                Me.lineTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property PolylineText() As String
            Get
                Return Me.polylineTextField
            End Get
            Set(ByVal value As String)
                Me.polylineTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property TextText() As String
            Get
                Return Me.textTextField
            End Get
            Set(ByVal value As String)
                Me.textTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
        Public Property TextPromptText() As String
            Get
                Return Me.textPromptTextField
            End Get
            Set(ByVal value As String)
                Me.textPromptTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=6)> _
        Public Property FreehandText() As String
            Get
                Return Me.freehandTextField
            End Get
            Set(ByVal value As String)
                Me.freehandTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=7)> _
        Public Property OptionsText() As String
            Get
                Return Me.optionsTextField
            End Get
            Set(ByVal value As String)
                Me.optionsTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=8)> _
        Public Property Block1Text() As String
            Get
                Return Me.block1TextField
            End Get
            Set(ByVal value As String)
                Me.block1TextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=9)> _
        Public Property Block2Text() As String
            Get
                Return Me.block2TextField
            End Get
            Set(ByVal value As String)
                Me.block2TextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=10)> _
        Public Property Block3Text() As String
            Get
                Return Me.block3TextField
            End Get
            Set(ByVal value As String)
                Me.block3TextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=11)> _
        Public Property Block4Text() As String
            Get
                Return Me.block4TextField
            End Get
            Set(ByVal value As String)
                Me.block4TextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=12)> _
        Public Property Block5Text() As String
            Get
                Return Me.block5TextField
            End Get
            Set(ByVal value As String)
                Me.block5TextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=13)> _
        Public Property LabelSketchText() As String
            Get
                Return Me.labelSketchTextField
            End Get
            Set(ByVal value As String)
                Me.labelSketchTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=14)> _
        Public Property BackColorText() As String
            Get
                Return Me.backColorTextField
            End Get
            Set(ByVal value As String)
                Me.backColorTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=15)> _
        Public Property GridLineColorText() As String
            Get
                Return Me.gridLineColorTextField
            End Get
            Set(ByVal value As String)
                Me.gridLineColorTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=16)> _
        Public Property DrawingColorText() As String
            Get
                Return Me.drawingColorTextField
            End Get
            Set(ByVal value As String)
                Me.drawingColorTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=17)> _
        Public Property GridText() As String
            Get
                Return Me.gridTextField
            End Get
            Set(ByVal value As String)
                Me.gridTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=18)> _
        Public Property SmallestText() As String
            Get
                Return Me.smallestTextField
            End Get
            Set(ByVal value As String)
                Me.smallestTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=19)> _
        Public Property SmallText() As String
            Get
                Return Me.smallTextField
            End Get
            Set(ByVal value As String)
                Me.smallTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=20)> _
        Public Property NormalText() As String
            Get
                Return Me.normalTextField
            End Get
            Set(ByVal value As String)
                Me.normalTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=21)> _
        Public Property LargeText() As String
            Get
                Return Me.largeTextField
            End Get
            Set(ByVal value As String)
                Me.largeTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=22)> _
        Public Property LargerText() As String
            Get
                Return Me.largerTextField
            End Get
            Set(ByVal value As String)
                Me.largerTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=23)> _
        Public Property LargestText() As String
            Get
                Return Me.largestTextField
            End Get
            Set(ByVal value As String)
                Me.largestTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=24)> _
        Public Property EditText() As String
            Get
                Return Me.editTextField
            End Get
            Set(ByVal value As String)
                Me.editTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=25)> _
        Public Property UndoText() As String
            Get
                Return Me.undoTextField
            End Get
            Set(ByVal value As String)
                Me.undoTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=26)> _
        Public Property RedoText() As String
            Get
                Return Me.redoTextField
            End Get
            Set(ByVal value As String)
                Me.redoTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=27)> _
        Public Property DeleteText() As String
            Get
                Return Me.deleteTextField
            End Get
            Set(ByVal value As String)
                Me.deleteTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=28)> _
        Public Property ClearText() As String
            Get
                Return Me.clearTextField
            End Get
            Set(ByVal value As String)
                Me.clearTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=29)> _
        Public Property SaveText() As String
            Get
                Return Me.saveTextField
            End Get
            Set(ByVal value As String)
                Me.saveTextField = value
            End Set
        End Property
        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigSketchPanelUIComponents))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSketchPanelUIComponents object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSketchPanelUIComponents, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSketchPanelUIComponents)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigSketchPanelUIComponents) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigSketchPanelUIComponents
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigSketchPanelUIComponents)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigSketchPanelUIComponents object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSketchPanelUIComponents, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigSketchPanelUIComponents)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigSketchPanelUIComponents) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigSketchPanelUIComponents
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class



    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigIDPanel

        Private visibleField As String

        Private displayTextField As String

        Private statusBarMessageField As String

        Private toolMessageField As String

        Private searchTolerenceField As String

        Private showLengthFieldInIDField As String

        Private lengthFormatField As String

        Private lengthUnitField As String

        Private iDGroupsField As MobileConfigMobileMapConfigIDPanelIDGroups

        Private uIComponentsField As MobileConfigMobileMapConfigIDPanelUIComponents


        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.iDGroupsField = New MobileConfigMobileMapConfigIDPanelIDGroups()
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Visible() As String
            Get
                Return Me.visibleField
            End Get
            Set(ByVal value As String)
                Me.visibleField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property DisplayText() As String
            Get
                Return Me.displayTextField
            End Get
            Set(ByVal value As String)
                Me.displayTextField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property StatusBarMessage() As String
            Get
                Return Me.statusBarMessageField
            End Get
            Set(ByVal value As String)
                Me.statusBarMessageField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property ToolMessage() As String
            Get
                Return Me.toolMessageField
            End Get
            Set(ByVal value As String)
                Me.toolMessageField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property SearchTolerence() As String
            Get
                Return Me.searchTolerenceField
            End Get
            Set(ByVal value As String)
                Me.searchTolerenceField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
        Public Property ShowLengthFieldInID() As String
            Get
                Return Me.showLengthFieldInIDField
            End Get
            Set(ByVal value As String)
                Me.showLengthFieldInIDField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=6)> _
        Public Property LengthFormat() As String
            Get
                Return Me.lengthFormatField
            End Get
            Set(ByVal value As String)
                Me.lengthFormatField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=7)> _
        Public Property LengthUnit() As String
            Get
                Return Me.lengthUnitField
            End Get
            Set(ByVal value As String)
                Me.lengthUnitField = value
            End Set
        End Property


        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=8)> _
        Public Property IDGroups() As MobileConfigMobileMapConfigIDPanelIDGroups
            Get
                Return Me.iDGroupsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigIDPanelIDGroups)
                Me.iDGroupsField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=9)> _
        Public Property UIComponents() As MobileConfigMobileMapConfigIDPanelUIComponents
            Get
                Return Me.uIComponentsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigIDPanelUIComponents)
                Me.uIComponentsField = value
            End Set
        End Property



        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigIDPanel))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigIDPanel object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigIDPanel object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigIDPanel object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigIDPanel, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigIDPanel)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigIDPanel) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigIDPanel
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigIDPanel)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigIDPanel object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigIDPanel object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigIDPanel object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigIDPanel, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigIDPanel)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigIDPanel) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigIDPanel
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigIDPanelIDGroups

        Private iDGroupField As List(Of MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup)
        Private allLayersTextField As String
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.iDGroupField = New List(Of MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup)
        End Sub

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property AllLayersText() As String
            Get
                Return Me.allLayersTextField
            End Get
            Set(ByVal value As String)
                Me.allLayersTextField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property IDGroup() As List(Of MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup)
            Get
                Return Me.iDGroupField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup))
                Me.iDGroupField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigIDPanelIDGroups))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigIDPanelIDGroups object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigIDPanelIDGroups object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigIDPanelIDGroups object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigIDPanelIDGroups, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigIDPanelIDGroups)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigIDPanelIDGroups) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigIDPanelIDGroups
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigIDPanelIDGroups)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigIDPanelIDGroups object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigIDPanelIDGroups object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigIDPanelIDGroups object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigIDPanelIDGroups, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigIDPanelIDGroups)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigIDPanelIDGroups) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigIDPanelIDGroups
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup

        Private iDLayerField As List(Of MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer)

        Private displayNameField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.iDLayerField = New List(Of MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer)
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property IDLayer() As List(Of MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer)
            Get
                Return Me.iDLayerField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer))
                Me.iDLayerField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property DisplayName() As String
            Get
                Return Me.displayNameField
            End Get
            Set(ByVal value As String)
                Me.displayNameField = value
            End Set
        End Property

        Public Function LayersToList() As List(Of String)
            Dim retList As New List(Of String)
            For Each temp In IDLayer
                retList.Add(temp.Name)
            Next


            Return retList
        End Function
        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigIDPanelIDGroupsIDGroup
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer


        Private nameField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()

        End Sub



        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set(ByVal value As String)
                Me.nameField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigIDPanelIDGroupsIDGroupIDLayer
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
System.SerializableAttribute(), _
System.ComponentModel.DesignerCategoryAttribute("code"), _
System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigIDPanelUIComponents

        Private pageNameField As String

        Private topMostIDTextField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()

            Me.pageNameField = ""

        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property PageName() As String
            Get
                Return Me.pageNameField
            End Get
            Set(ByVal value As String)
                Me.pageNameField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property TopMostIDText() As String
            Get
                Return Me.topMostIDTextField
            End Get
            Set(ByVal value As String)
                Me.topMostIDTextField = value
            End Set
        End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        'Public Property ButtonShowText() As String
        '    Get
        '        Return Me.buttonShowTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.buttonShowTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        'Public Property ButtonFlashText() As String
        '    Get
        '        Return Me.buttonFlashTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.buttonFlashTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        'Public Property ButtonRouteText() As String
        '    Get
        '        Return Me.buttonRouteTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.buttonRouteTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        'Public Property GoToXYText() As String
        '    Get
        '        Return Me.goToXYTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.goToXYTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
        'Public Property XText() As String
        '    Get
        '        Return Me.xTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.xTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=6)> _
        'Public Property YText() As String
        '    Get
        '        Return Me.yTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.yTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=7)> _
        'Public Property GoToXYButtonText() As String
        '    Get
        '        Return Me.goToXYButtonTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.goToXYButtonTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=8)> _
        'Public Property GoToXYErrorText() As String
        '    Get
        '        Return Me.goToXYErrorTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.goToXYErrorTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=9)> _
        'Public Property SearchLayerLabelText() As String
        '    Get
        '        Return Me.searchLayerLabelTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.searchLayerLabelTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=10)> _
        'Public Property SearchFieldLabelText() As String
        '    Get
        '        Return Me.searchFieldLabelTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.searchFieldLabelTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=11)> _
        'Public Property SearchValueLabelText() As String
        '    Get
        '        Return Me.searchValueLabelTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.searchValueLabelTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=12)> _
        'Public Property SearchSimilarLabelText() As String
        '    Get
        '        Return Me.searchSimilarLabelTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.searchSimilarLabelTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=13)> _
        'Public Property SearchButtonText() As String
        '    Get
        '        Return Me.searchButtonTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.searchButtonTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=14)> _
        'Public Property SearchResultsText() As String
        '    Get
        '        Return Me.searchResultsTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.searchResultsTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=15)> _
        'Public Property IntersectionPreFilterLabelText() As String
        '    Get
        '        Return Me.intersectionPreFilterLabelTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.intersectionPreFilterLabelTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=16)> _
        'Public Property IntersectionPrimaryLabelText() As String
        '    Get
        '        Return Me.intersectionPrimaryLabelTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.intersectionPrimaryLabelTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=17)> _
        'Public Property IntersectionIntersectingLabelText() As String
        '    Get
        '        Return Me.intersectionIntersectingLabelTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.intersectionIntersectingLabelTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=18)> _
        'Public Property IntersectionRangeLabelText() As String
        '    Get
        '        Return Me.intersectionRangeLabelTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.intersectionRangeLabelTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=19)> _
        'Public Property IntersectionZoomToButtonText() As String
        '    Get
        '        Return Me.intersectionZoomToButtonTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.intersectionZoomToButtonTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=20)> _
        'Public Property IntersectionReloadButtonText() As String
        '    Get
        '        Return Me.intersectionReloadButtonTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.intersectionReloadButtonTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=21)> _
        'Public Property DrillDownZoomToButtonText() As String
        '    Get
        '        Return Me.drillDownZoomToButtonTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.drillDownZoomToButtonTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=22)> _
        'Public Property DrillDownResultsText() As String
        '    Get
        '        Return Me.drillDownResultsTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.drillDownResultsTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=23)> _
        'Public Property GeocodePreFilterLabelText() As String
        '    Get
        '        Return Me.geocodePreFilterLabelTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.geocodePreFilterLabelTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=24)> _
        'Public Property GeocodeAddressLabelText() As String
        '    Get
        '        Return Me.geocodeAddressLabelTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.geocodeAddressLabelTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=25)> _
        'Public Property GeocodeLookupButtonText() As String
        '    Get
        '        Return Me.geocodeLookupButtonTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.geocodeLookupButtonTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=26)> _
        'Public Property GeocodeResultsText() As String
        '    Get
        '        Return Me.geocodeResultsTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.geocodeResultsTextField = value
        '    End Set
        'End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigIDPanelUIComponents))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigIDPanelUIComponents object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigIDPanelUIComponents, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigIDPanelUIComponents)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigIDPanelUIComponents) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigIDPanelUIComponents
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigIDPanelUIComponents)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigIDPanelUIComponents object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigIDPanelUIComponents, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigIDPanelUIComponents)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigIDPanelUIComponents) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigIDPanelUIComponents
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigCreateFeaturePanel

        Private visibleField As String

        Private displayTextField As String

        Private statusBarMessageField As String

        Private toolMessageField As String

        Private attachmentOptionsField As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptions
        'Private layerNameField As String

        'Private redlineModeField As String

        'Private layersField As MobileConfigMobileMapConfigCreateFeaturePanelLayers

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Visible() As String
            Get
                Return Me.visibleField
            End Get
            Set(ByVal value As String)
                Me.visibleField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property DisplayText() As String
            Get
                Return Me.displayTextField
            End Get
            Set(ByVal value As String)
                Me.displayTextField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property StatusBarMessage() As String
            Get
                Return Me.statusBarMessageField
            End Get
            Set(ByVal value As String)
                Me.statusBarMessageField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property ToolMessage() As String
            Get
                Return Me.toolMessageField
            End Get
            Set(ByVal value As String)
                Me.toolMessageField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property AttachmentOptions() As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptions
            Get
                Return Me.attachmentOptionsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptions)
                Me.attachmentOptionsField = value
            End Set
        End Property

        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        'Public Property LayerName() As String
        '    Get
        '        Return Me.layerNameField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.layerNameField = value
        '    End Set
        'End Property

        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
        'Public Property RedlineMode() As String
        '    Get
        '        Return Me.redlineModeField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.redlineModeField = value
        '    End Set
        'End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigCreateFeaturePanel))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigCreateFeaturePanel object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigCreateFeaturePanel object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigCreateFeaturePanel object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanel, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigCreateFeaturePanel)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanel) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigCreateFeaturePanel
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigCreateFeaturePanel)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigCreateFeaturePanel object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigCreateFeaturePanel object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigCreateFeaturePanel object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanel, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigCreateFeaturePanel)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanel) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigCreateFeaturePanel
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
   System.SerializableAttribute(), _
   System.ComponentModel.DesignerCategoryAttribute("code"), _
   System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptions

        Private attachmentSketchGroupsField As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroups


       
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()

        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property AttachmentSketchGroups() As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroups
            Get
                Return Me.attachmentSketchGroupsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroups)
                Me.attachmentSketchGroupsField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptions))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptions object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptions object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptions object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptions, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptions)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptions) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptions
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptions)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptions object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptions object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptions object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptions, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptions)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptions) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptions
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
   System.SerializableAttribute(), _
   System.ComponentModel.DesignerCategoryAttribute("code"), _
   System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroups

        Private AttachmentSketchGroupField As List(Of MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup)
        Private buttonSizeField As String
        Private buttonFontSizeField As String
        Private listFontSizeField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.AttachmentSketchGroupField = New List(Of MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup)
        End Sub


        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ButtonSize() As String
            Get
                Return Me.buttonSizeField
            End Get
            Set(ByVal value As String)
                Me.buttonSizeField = value
            End Set
        End Property


        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ButtonFontSize() As String
            Get
                Return Me.buttonFontSizeField
            End Get
            Set(ByVal value As String)
                Me.buttonFontSizeField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ListFontSize() As String
            Get
                Return Me.listFontSizeField
            End Get
            Set(ByVal value As String)
                Me.listFontSizeField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property AttachmentSketchGroup() As List(Of MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup)
            Get
                Return Me.AttachmentSketchGroupField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup))
                Me.AttachmentSketchGroupField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroups))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroups object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroups object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroups object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroups, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroups)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroups) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroups
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroups)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroups object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroups object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroups object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroups, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroups)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroups) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroups
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
System.SerializableAttribute(), _
System.ComponentModel.DesignerCategoryAttribute("code"), _
System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup



        Private labelField As String
        Private layerField As String

        
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.layerField = ""
            Me.labelField = ""
            
        End Sub

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Label() As String
            Get
                Return Me.labelField
            End Get
            Set(ByVal value As String)
                Me.labelField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Layer() As String
            Get
                Return Me.layerField
            End Get
            Set(ByVal value As String)
                Me.layerField = value
            End Set
        End Property
        
        

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Overloads Function Serialize(ByVal encoding As System.Text.Encoding) As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Dim xmlWriterSettings As System.Xml.XmlWriterSettings = New System.Xml.XmlWriterSettings()
                xmlWriterSettings.Encoding = encoding
                Dim xmlWriter As System.Xml.XmlWriter = xmlWriter.Create(memoryStream, xmlWriterSettings)
                Serializer.Serialize(xmlWriter, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        Public Overridable Overloads Function Serialize() As String
            Return Serialize(Encoding.UTF8)
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName, encoding)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            Return SaveToFile(fileName, Encoding.UTF8, exception)
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            SaveToFile(fileName, Encoding.UTF8)
        End Sub

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize(encoding)
                streamWriter = New System.IO.StreamWriter(fileName, False, encoding.UTF8)
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup)
            Try
                obj = LoadFromFile(fileName, encoding)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup, ByRef exception As System.Exception) As Boolean
            Return LoadFromFile(fileName, Encoding.UTF8, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup
            Return LoadFromFile(fileName, Encoding.UTF8)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding) As MobileConfigMobileMapConfigCreateFeaturePanelAttachmentOptionsAttachmentSketchGroupsAttachmentSketchGroup
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file, encoding)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class




    '    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
    '     System.SerializableAttribute(), _
    '     System.ComponentModel.DesignerCategoryAttribute("code"), _
    '     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    '    Partial Public Class MobileConfigMobileMapConfigCreateFeaturePanelLayersLayer

    '        Private nameField As String
    '        Private editToolField As String
    '        Private sketchColorField As String
    '        Public Sub New()
    '            MyBase.New()

    '            Me.nameField = ""
    '            Me.editToolField = ""
    '            sketchColorField = ""
    '        End Sub
    '        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

    '        <System.Xml.Serialization.XmlAttributeAttribute()> _
    '        Public Property Name() As String
    '            Get
    '                Return Me.nameField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.nameField = value
    '            End Set
    '        End Property
    '        <System.Xml.Serialization.XmlAttributeAttribute()> _
    '        Public Property EditTool() As String
    '            Get
    '                Return Me.editToolField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.editToolField = value
    '            End Set
    '        End Property
    '        <System.Xml.Serialization.XmlAttributeAttribute()> _
    '        Public Property SketchColor() As String
    '            Get
    '                Return Me.sketchColorField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.sketchColorField = value
    '            End Set
    '        End Property



    '        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
    '            Get
    '                If (sSerializer Is Nothing) Then
    '                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigCreateFeaturePanelLayersLayer))
    '                End If
    '                Return sSerializer
    '            End Get
    '        End Property

    '#Region "Serialize/Deserialize"
    '        '''<summary>
    '        '''Serializes current MobileConfigMobileMapConfigCreateFeaturePanelLayersLayer object into an XML document
    '        '''</summary>
    '        '''<returns>string XML value</returns>
    '        Public Overridable Function Serialize() As String
    '            Dim streamReader As System.IO.StreamReader = Nothing
    '            Dim memoryStream As System.IO.MemoryStream = Nothing
    '            Try
    '                memoryStream = New System.IO.MemoryStream()
    '                Serializer.Serialize(memoryStream, Me)
    '                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
    '                streamReader = New System.IO.StreamReader(memoryStream)
    '                Return streamReader.ReadToEnd
    '            Finally
    '                If (Not (streamReader) Is Nothing) Then
    '                    streamReader.Dispose()
    '                End If
    '                If (Not (memoryStream) Is Nothing) Then
    '                    memoryStream.Dispose()
    '                End If
    '            End Try
    '        End Function

    '        '''<summary>
    '        '''Deserializes workflow markup into an MobileConfigMobileMapConfigCreateFeaturePanelLayersLayer object
    '        '''</summary>
    '        '''<param name="xml">string workflow markup to deserialize</param>
    '        '''<param name="obj">Output MobileConfigMobileMapConfigCreateFeaturePanelLayersLayer object</param>
    '        '''<param name="exception">output Exception value if deserialize failed</param>
    '        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
    '        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanelLayersLayer, ByRef exception As System.Exception) As Boolean
    '            exception = Nothing
    '            obj = CType(Nothing, MobileConfigMobileMapConfigCreateFeaturePanelLayersLayer)
    '            Try
    '                obj = Deserialize(xml)
    '                Return True
    '            Catch ex As System.Exception
    '                exception = ex
    '                Return False
    '            End Try
    '        End Function

    '        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanelLayersLayer) As Boolean
    '            Dim exception As System.Exception = Nothing
    '            Return Deserialize(xml, obj, exception)
    '        End Function

    '        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigCreateFeaturePanelLayersLayer
    '            Dim stringReader As System.IO.StringReader = Nothing
    '            Try
    '                stringReader = New System.IO.StringReader(xml)
    '                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigCreateFeaturePanelLayersLayer)
    '            Finally
    '                If (Not (stringReader) Is Nothing) Then
    '                    stringReader.Dispose()
    '                End If
    '            End Try
    '        End Function

    '        '''<summary>
    '        '''Serializes current MobileConfigMobileMapConfigCreateFeaturePanelLayersLayer object into file
    '        '''</summary>
    '        '''<param name="fileName">full path of outupt xml file</param>
    '        '''<param name="exception">output Exception value if failed</param>
    '        '''<returns>true if can serialize and save into file; otherwise, false</returns>
    '        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
    '            exception = Nothing
    '            Try
    '                SaveToFile(fileName)
    '                Return True
    '            Catch e As System.Exception
    '                exception = e
    '                Return False
    '            End Try
    '        End Function

    '        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
    '            Dim streamWriter As System.IO.StreamWriter = Nothing
    '            Try
    '                Dim xmlString As String = Serialize()
    '                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
    '                streamWriter = xmlFile.CreateText
    '                streamWriter.WriteLine(xmlString)
    '                streamWriter.Close()
    '            Finally
    '                If (Not (streamWriter) Is Nothing) Then
    '                    streamWriter.Dispose()
    '                End If
    '            End Try
    '        End Sub

    '        '''<summary>
    '        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigCreateFeaturePanelLayersLayer object
    '        '''</summary>
    '        '''<param name="fileName">string xml file to load and deserialize</param>
    '        '''<param name="obj">Output MobileConfigMobileMapConfigCreateFeaturePanelLayersLayer object</param>
    '        '''<param name="exception">output Exception value if deserialize failed</param>
    '        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
    '        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanelLayersLayer, ByRef exception As System.Exception) As Boolean
    '            exception = Nothing
    '            obj = CType(Nothing, MobileConfigMobileMapConfigCreateFeaturePanelLayersLayer)
    '            Try
    '                obj = LoadFromFile(fileName)
    '                Return True
    '            Catch ex As System.Exception
    '                exception = ex
    '                Return False
    '            End Try
    '        End Function

    '        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigCreateFeaturePanelLayersLayer) As Boolean
    '            Dim exception As System.Exception = Nothing
    '            Return LoadFromFile(fileName, obj, exception)
    '        End Function

    '        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigCreateFeaturePanelLayersLayer
    '            Dim file As System.IO.FileStream = Nothing
    '            Dim sr As System.IO.StreamReader = Nothing
    '            Try
    '                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
    '                sr = New System.IO.StreamReader(file)
    '                Dim xmlString As String = sr.ReadToEnd
    '                sr.Close()
    '                file.Close()
    '                Return Deserialize(xmlString)
    '            Finally
    '                If (Not (file) Is Nothing) Then
    '                    file.Dispose()
    '                End If
    '                If (Not (sr) Is Nothing) Then
    '                    sr.Dispose()
    '                End If
    '            End Try
    '        End Function
    '#End Region
    '    End Class

 

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigInspectionPanel

        Private visibleField As String

        Private displayTextField As String

        Private statusBarMessageField As String

        Private toolMessageField As String

        Private searchTolerenceField As String

        Private inspectionsField As MobileConfigMobileMapConfigInspectionPanelInspections

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.inspectionsField = New MobileConfigMobileMapConfigInspectionPanelInspections()
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Visible() As String
            Get
                Return Me.visibleField
            End Get
            Set(ByVal value As String)
                Me.visibleField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property DisplayText() As String
            Get
                Return Me.displayTextField
            End Get
            Set(ByVal value As String)
                Me.displayTextField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property StatusBarMessage() As String
            Get
                Return Me.statusBarMessageField
            End Get
            Set(ByVal value As String)
                Me.statusBarMessageField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property ToolMessage() As String
            Get
                Return Me.toolMessageField
            End Get
            Set(ByVal value As String)
                Me.toolMessageField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property SearchTolerence() As String
            Get
                Return Me.searchTolerenceField
            End Get
            Set(ByVal value As String)
                Me.searchTolerenceField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
        Public Property Inspections() As MobileConfigMobileMapConfigInspectionPanelInspections
            Get
                Return Me.inspectionsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigInspectionPanelInspections)
                Me.inspectionsField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigInspectionPanel))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigInspectionPanel object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigInspectionPanel object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigInspectionPanel object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigInspectionPanel, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigInspectionPanel)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigInspectionPanel) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigInspectionPanel
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigInspectionPanel)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigInspectionPanel object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigInspectionPanel object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigInspectionPanel object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigInspectionPanel, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigInspectionPanel)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigInspectionPanel) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigInspectionPanel
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigInspectionPanelInspections

        Private inspectionField As List(Of MobileConfigMobileMapConfigInspectionPanelInspectionsInspection)

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.inspectionField = New List(Of MobileConfigMobileMapConfigInspectionPanelInspectionsInspection)
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Inspection() As List(Of MobileConfigMobileMapConfigInspectionPanelInspectionsInspection)
            Get
                Return Me.inspectionField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigInspectionPanelInspectionsInspection))
                Me.inspectionField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigInspectionPanelInspections))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigInspectionPanelInspections object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigInspectionPanelInspections object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigInspectionPanelInspections object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigInspectionPanelInspections, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigInspectionPanelInspections)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigInspectionPanelInspections) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigInspectionPanelInspections
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigInspectionPanelInspections)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigInspectionPanelInspections object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigInspectionPanelInspections object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigInspectionPanelInspections object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigInspectionPanelInspections, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigInspectionPanelInspections)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigInspectionPanelInspections) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigInspectionPanelInspections
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigInspectionPanelInspectionsInspection

        Private inspectedLayerField As String

        Private inspectedResultField As String

        Private displayTextField As String

        'Private copySameFieldsField As String

        'Private setFieldReadOnlyField As String
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer
        Public Sub New()

            Me.inspectedLayerField = ""

            Me.inspectedResultField = ""

            Me.displayTextField = ""

            'Me.copySameFieldsField = ""

            'Me.setFieldReadOnlyField = ""
        End Sub
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property InspectedLayer() As String
            Get
                Return Me.inspectedLayerField
            End Get
            Set(ByVal value As String)
                Me.inspectedLayerField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property InspectedResult() As String
            Get
                Return Me.inspectedResultField
            End Get
            Set(ByVal value As String)
                Me.inspectedResultField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property DisplayText() As String
            Get
                Return Me.displayTextField
            End Get
            Set(ByVal value As String)
                Me.displayTextField = value
            End Set
        End Property


        '<System.Xml.Serialization.XmlAttributeAttribute()> _
        '     Public Property CopySameFields() As String
        '    Get
        '        Return Me.copySameFieldsField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.copySameFieldsField = value
        '    End Set
        'End Property

        '<System.Xml.Serialization.XmlAttributeAttribute()> _
        'Public Property SetFieldReadOnly() As String
        '    Get
        '        Return Me.setFieldReadOnlyField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.setFieldReadOnlyField = value
        '    End Set
        'End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigInspectionPanelInspectionsInspection))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigInspectionPanelInspectionsInspection object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigInspectionPanelInspectionsInspection object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigInspectionPanelInspectionsInspection object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigInspectionPanelInspectionsInspection, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigInspectionPanelInspectionsInspection)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigInspectionPanelInspectionsInspection) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigInspectionPanelInspectionsInspection
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigInspectionPanelInspectionsInspection)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigInspectionPanelInspectionsInspection object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigInspectionPanelInspectionsInspection object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigInspectionPanelInspectionsInspection object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigInspectionPanelInspectionsInspection, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigInspectionPanelInspectionsInspection)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigInspectionPanelInspectionsInspection) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigInspectionPanelInspectionsInspection
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigWebPanel

        Private visibleField As String

        Private displayTextField As String

        Private statusBarMessageField As String

        Private webInterceptHyperlinksField As String

        Private webSitesField As MobileConfigMobileMapConfigWebPanelWebSites

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.webSitesField = New MobileConfigMobileMapConfigWebPanelWebSites()
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Visible() As String
            Get
                Return Me.visibleField
            End Get
            Set(ByVal value As String)
                Me.visibleField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property DisplayText() As String
            Get
                Return Me.displayTextField
            End Get
            Set(ByVal value As String)
                Me.displayTextField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property StatusBarMessage() As String
            Get
                Return Me.statusBarMessageField
            End Get
            Set(ByVal value As String)
                Me.statusBarMessageField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property WebInterceptHyperlinks() As String
            Get
                Return Me.webInterceptHyperlinksField
            End Get
            Set(ByVal value As String)
                Me.webInterceptHyperlinksField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property WebSites() As MobileConfigMobileMapConfigWebPanelWebSites
            Get
                Return Me.webSitesField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigWebPanelWebSites)
                Me.webSitesField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigWebPanel))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigWebPanel object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigWebPanel object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigWebPanel object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigWebPanel, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigWebPanel)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigWebPanel) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigWebPanel
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigWebPanel)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigWebPanel object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigWebPanel object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigWebPanel object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigWebPanel, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigWebPanel)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigWebPanel) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigWebPanel
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigWebPanelWebSites

        Private webSiteField As List(Of MobileConfigMobileMapConfigWebPanelWebSitesWebSite)

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.webSiteField = New List(Of MobileConfigMobileMapConfigWebPanelWebSitesWebSite)
        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property WebSite() As List(Of MobileConfigMobileMapConfigWebPanelWebSitesWebSite)
            Get
                Return Me.webSiteField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigWebPanelWebSitesWebSite))
                Me.webSiteField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigWebPanelWebSites))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigWebPanelWebSites object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigWebPanelWebSites object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigWebPanelWebSites object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigWebPanelWebSites, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigWebPanelWebSites)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigWebPanelWebSites) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigWebPanelWebSites
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigWebPanelWebSites)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigWebPanelWebSites object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigWebPanelWebSites object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigWebPanelWebSites object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigWebPanelWebSites, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigWebPanelWebSites)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigWebPanelWebSites) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigWebPanelWebSites
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigWebPanelWebSitesWebSite

        Private displayTextField As String

        Private uRLField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property DisplayText() As String
            Get
                Return Me.displayTextField
            End Get
            Set(ByVal value As String)
                Me.displayTextField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property URL() As String
            Get
                Return Me.uRLField
            End Get
            Set(ByVal value As String)
                Me.uRLField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigWebPanelWebSitesWebSite))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigWebPanelWebSitesWebSite object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigWebPanelWebSitesWebSite object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigWebPanelWebSitesWebSite object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigWebPanelWebSitesWebSite, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigWebPanelWebSitesWebSite)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigWebPanelWebSitesWebSite) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigWebPanelWebSitesWebSite
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigWebPanelWebSitesWebSite)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigWebPanelWebSitesWebSite object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigWebPanelWebSitesWebSite object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigWebPanelWebSitesWebSite object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigWebPanelWebSitesWebSite, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigWebPanelWebSitesWebSite)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigWebPanelWebSitesWebSite) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigWebPanelWebSitesWebSite
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    '    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
    '     System.SerializableAttribute(), _
    '     System.ComponentModel.DesignerCategoryAttribute("code"), _
    '     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    '    Partial Public Class MobileConfigMobileMapConfigActivitiesPanel

    '        Private visibleField As String

    '        Private displayTextField As String

    '        Private statusBarMessageField As String

    '        Private activityLayerField As String

    '        Private activityTypeFieldField As String

    '        Private activityAssignedFieldField As String

    '        Private activityLocDesFieldField As String

    '        Private activityPlanStartFieldField As String

    '        Private activityPlanEndFieldField As String

    '        Private activityIDFieldField As String

    '        Private activityFacIDFieldField As String

    '        Private activityFeatureClassFieldField As String

    '        Private activityStatusFieldField As String

    '        Private activityAddressFieldField As String

    '        Private activityStatusSearchValuesField As String

    '        Private activityStatusInProgressValuesField As String

    '        Private activityStatusCloseValuesField As String

    '        Private activityEmergencyField As String

    '        Private activityEmergencyValuesField As String

    '        Private lastRefreshField As String

    '        Private activityDefaultCrewField As String

    '        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
    '        Public Property Visible() As String
    '            Get
    '                Return Me.visibleField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.visibleField = value
    '            End Set
    '        End Property

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
    '        Public Property DisplayText() As String
    '            Get
    '                Return Me.displayTextField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.displayTextField = value
    '            End Set
    '        End Property

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
    '        Public Property StatusBarMessage() As String
    '            Get
    '                Return Me.statusBarMessageField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.statusBarMessageField = value
    '            End Set
    '        End Property

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
    '        Public Property ActivityLayer() As String
    '            Get
    '                Return Me.activityLayerField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.activityLayerField = value
    '            End Set
    '        End Property

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
    '        Public Property ActivityTypeField() As String
    '            Get
    '                Return Me.activityTypeFieldField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.activityTypeFieldField = value
    '            End Set
    '        End Property

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
    '        Public Property ActivityAssignedField() As String
    '            Get
    '                Return Me.activityAssignedFieldField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.activityAssignedFieldField = value
    '            End Set
    '        End Property

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=6)> _
    '        Public Property ActivityLocDesField() As String
    '            Get
    '                Return Me.activityLocDesFieldField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.activityLocDesFieldField = value
    '            End Set
    '        End Property

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=7)> _
    '        Public Property ActivityPlanStartField() As String
    '            Get
    '                Return Me.activityPlanStartFieldField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.activityPlanStartFieldField = value
    '            End Set
    '        End Property

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=8)> _
    '        Public Property ActivityPlanEndField() As String
    '            Get
    '                Return Me.activityPlanEndFieldField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.activityPlanEndFieldField = value
    '            End Set
    '        End Property

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=9)> _
    '        Public Property ActivityIDField() As String
    '            Get
    '                Return Me.activityIDFieldField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.activityIDFieldField = value
    '            End Set
    '        End Property

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=10)> _
    '        Public Property ActivityFacIDField() As String
    '            Get
    '                Return Me.activityFacIDFieldField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.activityFacIDFieldField = value
    '            End Set
    '        End Property

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=11)> _
    '        Public Property ActivityFeatureClassField() As String
    '            Get
    '                Return Me.activityFeatureClassFieldField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.activityFeatureClassFieldField = value
    '            End Set
    '        End Property

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=12)> _
    '        Public Property ActivityStatusField() As String
    '            Get
    '                Return Me.activityStatusFieldField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.activityStatusFieldField = value
    '            End Set
    '        End Property

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=13)> _
    '        Public Property ActivityAddressField() As String
    '            Get
    '                Return Me.activityAddressFieldField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.activityAddressFieldField = value
    '            End Set
    '        End Property

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=14)> _
    '        Public Property ActivityStatusSearchValues() As String
    '            Get
    '                Return Me.activityStatusSearchValuesField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.activityStatusSearchValuesField = value
    '            End Set
    '        End Property

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=15)> _
    '        Public Property ActivityStatusInProgressValues() As String
    '            Get
    '                Return Me.activityStatusInProgressValuesField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.activityStatusInProgressValuesField = value
    '            End Set
    '        End Property

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=16)> _
    '        Public Property ActivityStatusCloseValues() As String
    '            Get
    '                Return Me.activityStatusCloseValuesField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.activityStatusCloseValuesField = value
    '            End Set
    '        End Property

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=17)> _
    '        Public Property ActivityEmergency() As String
    '            Get
    '                Return Me.activityEmergencyField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.activityEmergencyField = value
    '            End Set
    '        End Property

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=18)> _
    '        Public Property ActivityEmergencyValues() As String
    '            Get
    '                Return Me.activityEmergencyValuesField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.activityEmergencyValuesField = value
    '            End Set
    '        End Property

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=19)> _
    '        Public Property LastRefresh() As String
    '            Get
    '                Return Me.lastRefreshField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.lastRefreshField = value
    '            End Set
    '        End Property

    '        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=20)> _
    '        Public Property ActivityDefaultCrew() As String
    '            Get
    '                Return Me.activityDefaultCrewField
    '            End Get
    '            Set(ByVal value As String)
    '                Me.activityDefaultCrewField = value
    '            End Set
    '        End Property

    '        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
    '            Get
    '                If (sSerializer Is Nothing) Then
    '                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigActivitiesPanel))
    '                End If
    '                Return sSerializer
    '            End Get
    '        End Property




    '#Region "Serialize/Deserialize"
    '        '''<summary>
    '        '''Serializes current MobileConfigMobileMapConfigActivitiesPanel object into an XML document
    '        '''</summary>
    '        '''<returns>string XML value</returns>
    '        Public Overridable Function Serialize() As String
    '            Dim streamReader As System.IO.StreamReader = Nothing
    '            Dim memoryStream As System.IO.MemoryStream = Nothing
    '            Try
    '                memoryStream = New System.IO.MemoryStream()
    '                Serializer.Serialize(memoryStream, Me)
    '                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
    '                streamReader = New System.IO.StreamReader(memoryStream)
    '                Return streamReader.ReadToEnd
    '            Finally
    '                If (Not (streamReader) Is Nothing) Then
    '                    streamReader.Dispose()
    '                End If
    '                If (Not (memoryStream) Is Nothing) Then
    '                    memoryStream.Dispose()
    '                End If
    '            End Try
    '        End Function

    '        '''<summary>
    '        '''Deserializes workflow markup into an MobileConfigMobileMapConfigActivitiesPanel object
    '        '''</summary>
    '        '''<param name="xml">string workflow markup to deserialize</param>
    '        '''<param name="obj">Output MobileConfigMobileMapConfigActivitiesPanel object</param>
    '        '''<param name="exception">output Exception value if deserialize failed</param>
    '        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
    '        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigActivitiesPanel, ByRef exception As System.Exception) As Boolean
    '            exception = Nothing
    '            obj = CType(Nothing, MobileConfigMobileMapConfigActivitiesPanel)
    '            Try
    '                obj = Deserialize(xml)
    '                Return True
    '            Catch ex As System.Exception
    '                exception = ex
    '                Return False
    '            End Try
    '        End Function

    '        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigActivitiesPanel) As Boolean
    '            Dim exception As System.Exception = Nothing
    '            Return Deserialize(xml, obj, exception)
    '        End Function

    '        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigActivitiesPanel
    '            Dim stringReader As System.IO.StringReader = Nothing
    '            Try
    '                stringReader = New System.IO.StringReader(xml)
    '                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigActivitiesPanel)
    '            Finally
    '                If (Not (stringReader) Is Nothing) Then
    '                    stringReader.Dispose()
    '                End If
    '            End Try
    '        End Function

    '        '''<summary>
    '        '''Serializes current MobileConfigMobileMapConfigActivitiesPanel object into file
    '        '''</summary>
    '        '''<param name="fileName">full path of outupt xml file</param>
    '        '''<param name="exception">output Exception value if failed</param>
    '        '''<returns>true if can serialize and save into file; otherwise, false</returns>
    '        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
    '            exception = Nothing
    '            Try
    '                SaveToFile(fileName)
    '                Return True
    '            Catch e As System.Exception
    '                exception = e
    '                Return False
    '            End Try
    '        End Function

    '        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
    '            Dim streamWriter As System.IO.StreamWriter = Nothing
    '            Try
    '                Dim xmlString As String = Serialize()
    '                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
    '                streamWriter = xmlFile.CreateText
    '                streamWriter.WriteLine(xmlString)
    '                streamWriter.Close()
    '            Finally
    '                If (Not (streamWriter) Is Nothing) Then
    '                    streamWriter.Dispose()
    '                End If
    '            End Try
    '        End Sub

    '        '''<summary>
    '        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigActivitiesPanel object
    '        '''</summary>
    '        '''<param name="fileName">string xml file to load and deserialize</param>
    '        '''<param name="obj">Output MobileConfigMobileMapConfigActivitiesPanel object</param>
    '        '''<param name="exception">output Exception value if deserialize failed</param>
    '        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
    '        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigActivitiesPanel, ByRef exception As System.Exception) As Boolean
    '            exception = Nothing
    '            obj = CType(Nothing, MobileConfigMobileMapConfigActivitiesPanel)
    '            Try
    '                obj = LoadFromFile(fileName)
    '                Return True
    '            Catch ex As System.Exception
    '                exception = ex
    '                Return False
    '            End Try
    '        End Function

    '        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigActivitiesPanel) As Boolean
    '            Dim exception As System.Exception = Nothing
    '            Return LoadFromFile(fileName, obj, exception)
    '        End Function

    '        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigActivitiesPanel
    '            Dim file As System.IO.FileStream = Nothing
    '            Dim sr As System.IO.StreamReader = Nothing
    '            Try
    '                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
    '                sr = New System.IO.StreamReader(file)
    '                Dim xmlString As String = sr.ReadToEnd
    '                sr.Close()
    '                file.Close()
    '                Return Deserialize(xmlString)
    '            Finally
    '                If (Not (file) Is Nothing) Then
    '                    file.Dispose()
    '                End If
    '                If (Not (sr) Is Nothing) Then
    '                    sr.Dispose()
    '                End If
    '            End Try
    '        End Function
    '#End Region
    '    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
   System.SerializableAttribute(), _
   System.ComponentModel.DesignerCategoryAttribute("code"), _
   System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigWorkorderPanel

        Private visibleField As String

        Private displayTextField As String

        Private statusBarMessageField As String

        Private layerInfoField As MobileConfigMobileMapConfigWorkorderPanelLayerInfo

        Private workOrderFiltersField As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters

        Private uIComponentsField As MobileConfigMobileMapConfigWorkorderPanelUIComponents

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            Me.layerInfoField = New MobileConfigMobileMapConfigWorkorderPanelLayerInfo
            Me.workOrderFiltersField = New MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters
            Me.uIComponentsField = New MobileConfigMobileMapConfigWorkorderPanelUIComponents
        End Sub
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Visible() As String
            Get
                Return Me.visibleField
            End Get
            Set(ByVal value As String)
                Me.visibleField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property DisplayText() As String
            Get
                Return Me.displayTextField
            End Get
            Set(ByVal value As String)
                Me.displayTextField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property StatusBarMessage() As String
            Get
                Return Me.statusBarMessageField
            End Get
            Set(ByVal value As String)
                Me.statusBarMessageField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property LayerInfo() As MobileConfigMobileMapConfigWorkorderPanelLayerInfo
            Get
                Return Me.layerInfoField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigWorkorderPanelLayerInfo)
                Me.layerInfoField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property WorkOrderFilters() As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters
            Get
                Return Me.workOrderFiltersField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters)
                Me.workOrderFiltersField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
        Public Property UIComponents() As MobileConfigMobileMapConfigWorkorderPanelUIComponents
            Get
                Return Me.uIComponentsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigWorkorderPanelUIComponents)
                Me.uIComponentsField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigWorkorderPanel))
                End If
                Return sSerializer
            End Get
        End Property




#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigWorkorderPanel object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigWorkorderPanel object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigWorkorderPanel object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanel, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigWorkorderPanel)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanel) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigWorkorderPanel
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigWorkorderPanel)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigWorkorderPanel object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigWorkorderPanel object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigWorkorderPanel object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanel, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigWorkorderPanel)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanel) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigWorkorderPanel
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
 System.SerializableAttribute(), _
 System.ComponentModel.DesignerCategoryAttribute("code"), _
 System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigWorkorderPanelLayerInfo

        Private layerNameField As String
        Private assignedToField_Field As String

        Private assignedTo_Field As String = "<NO_MOD>"
        Private iDField_Field As String
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.layerNameField = ""
            Me.assignedToField_Field = ""
            Me.assignedTo_Field = ""
            Me.iDField_Field = ""
        End Sub

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property LayerName() As String
            Get
                Return Me.layerNameField
            End Get
            Set(ByVal value As String)
                Me.layerNameField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property AssignedToField() As String
            Get
                Return Me.assignedToField_Field
            End Get
            Set(ByVal value As String)
                Me.assignedToField_Field = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property AssignedTo() As String
            Get
                Return Me.assignedTo_Field
            End Get
            Set(ByVal value As String)
                Me.assignedTo_Field = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property IDField() As String
            Get
                Return Me.iDField_Field
            End Get
            Set(ByVal value As String)
                Me.iDField_Field = value
            End Set
        End Property
        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigWorkorderPanelLayerInfo))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigWorkorderPanelLayerInfo object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Overloads Function Serialize(ByVal encoding As System.Text.Encoding) As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Dim xmlWriterSettings As System.Xml.XmlWriterSettings = New System.Xml.XmlWriterSettings()
                xmlWriterSettings.Encoding = encoding
                Dim xmlWriter As System.Xml.XmlWriter = xmlWriter.Create(memoryStream, xmlWriterSettings)
                Serializer.Serialize(xmlWriter, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        Public Overridable Overloads Function Serialize() As String
            Return Serialize(Encoding.UTF8)
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigWorkorderPanelLayerInfo object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigWorkorderPanelLayerInfo object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelLayerInfo, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigWorkorderPanelLayerInfo)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelLayerInfo) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigWorkorderPanelLayerInfo
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigWorkorderPanelLayerInfo)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigWorkorderPanelLayerInfo object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName, encoding)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            Return SaveToFile(fileName, Encoding.UTF8, exception)
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            SaveToFile(fileName, Encoding.UTF8)
        End Sub

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize(encoding)
                streamWriter = New System.IO.StreamWriter(fileName, False, encoding.UTF8)
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigWorkorderPanelLayerInfo object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigWorkorderPanelLayerInfo object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelLayerInfo, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigWorkorderPanelLayerInfo)
            Try
                obj = LoadFromFile(fileName, encoding)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelLayerInfo, ByRef exception As System.Exception) As Boolean
            Return LoadFromFile(fileName, Encoding.UTF8, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelLayerInfo) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigWorkorderPanelLayerInfo
            Return LoadFromFile(fileName, Encoding.UTF8)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding) As MobileConfigMobileMapConfigWorkorderPanelLayerInfo
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file, encoding)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
    System.SerializableAttribute(), _
    System.ComponentModel.DesignerCategoryAttribute("code"), _
    System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters

        Private workOrderFilterField As List(Of MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter)
        Private buttonSizeField As String
        Private buttonFontSizeField As String
        Private listFontSizeField As String

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.workOrderFilterField = New List(Of MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter)
        End Sub


        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ButtonSize() As String
            Get
                Return Me.buttonSizeField
            End Get
            Set(ByVal value As String)
                Me.buttonSizeField = value
            End Set
        End Property


        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ButtonFontSize() As String
            Get
                Return Me.buttonFontSizeField
            End Get
            Set(ByVal value As String)
                Me.buttonFontSizeField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property ListFontSize() As String
            Get
                Return Me.listFontSizeField
            End Get
            Set(ByVal value As String)
                Me.listFontSizeField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property WorkOrderFilter() As List(Of MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter)
            Get
                Return Me.workOrderFilterField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter))
                Me.workOrderFilterField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFilters
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
  System.SerializableAttribute(), _
  System.ComponentModel.DesignerCategoryAttribute("code"), _
  System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter


        Private queryValueField As String
        Private labelField As String
        Private sortFieldField As String
        Private sortDirectionField As String
        Private actionField As String

        Private fieldsField As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFields

        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Public Sub New()
            MyBase.New()
            Me.queryValueField = ""
            Me.labelField = ""
            Me.SortField = ""
            Me.SortDirection = ""
            Me.actionField = ""
        End Sub


        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property QueryValue() As String
            Get
                Return Me.queryValueField
            End Get
            Set(ByVal value As String)
                Me.queryValueField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Label() As String
            Get
                Return Me.labelField
            End Get
            Set(ByVal value As String)
                Me.labelField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property SortField() As String
            Get
                Return Me.sortFieldField
            End Get
            Set(ByVal value As String)
                Me.sortFieldField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property SortDirection() As String
            Get
                Return Me.sortDirectionField
            End Get
            Set(ByVal value As String)
                Me.sortDirectionField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Action() As String
            Get
                Return Me.actionField
            End Get
            Set(ByVal value As String)
                Me.actionField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Fields() As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFields
            Get
                Return Me.fieldsField
            End Get
            Set(ByVal value As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFields)
                Me.fieldsField = value
            End Set
        End Property



        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Overloads Function Serialize(ByVal encoding As System.Text.Encoding) As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Dim xmlWriterSettings As System.Xml.XmlWriterSettings = New System.Xml.XmlWriterSettings()
                xmlWriterSettings.Encoding = encoding
                Dim xmlWriter As System.Xml.XmlWriter = xmlWriter.Create(memoryStream, xmlWriterSettings)
                Serializer.Serialize(xmlWriter, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        Public Overridable Overloads Function Serialize() As String
            Return Serialize(Encoding.UTF8)
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName, encoding)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            Return SaveToFile(fileName, Encoding.UTF8, exception)
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            SaveToFile(fileName, Encoding.UTF8)
        End Sub

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize(encoding)
                streamWriter = New System.IO.StreamWriter(fileName, False, encoding.UTF8)
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter)
            Try
                obj = LoadFromFile(fileName, encoding)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter, ByRef exception As System.Exception) As Boolean
            Return LoadFromFile(fileName, Encoding.UTF8, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter
            Return LoadFromFile(fileName, Encoding.UTF8)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByVal encoding As System.Text.Encoding) As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilter
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file, encoding)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
   System.SerializableAttribute(), _
   System.ComponentModel.DesignerCategoryAttribute("code"), _
   System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFields

        Private joinStringField As String

        Private fieldField As List(Of MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField)
        Public Sub New()
            MyBase.New()

            Me.fieldField = New List(Of MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField)
        End Sub



        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property JoinString() As String
            Get
                Return Me.joinStringField
            End Get
            Set(ByVal value As String)
                Me.joinStringField = value
            End Set
        End Property
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property Field() As List(Of MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField)
            Get
                Return Me.fieldField
            End Get
            Set(ByVal value As List(Of MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField))
                Me.fieldField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFields))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFields object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFields object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFields object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFields, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFields)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFields) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFields
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFields)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFields object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFields object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFields object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFields, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFields)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFields) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFields
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
     System.SerializableAttribute(), _
     System.ComponentModel.DesignerCategoryAttribute("code"), _
     System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField

        Private nameField As String
        Private labelField As String
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer
        Public Sub New()
            MyBase.New()

            Me.nameField = ""
            Me.labelField = ""
        End Sub
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Name() As String
            Get
                Return Me.nameField
            End Get
            Set(ByVal value As String)
                Me.nameField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlAttributeAttribute()> _
        Public Property Label() As String
            Get
                Return Me.labelField
            End Get
            Set(ByVal value As String)
                Me.labelField = value
            End Set
        End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigWorkorderPanelWorkOrderFiltersWorkOrderFilterFieldsField
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
System.SerializableAttribute(), _
System.ComponentModel.DesignerCategoryAttribute("code"), _
System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigWorkorderPanelUIComponents
        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        Private invalidSqlMessageField As String
        Private fieldCreateWOTextField As String
        Private noDisplayTextField As String
        Private changeCrewTextField As String
        Private saveCrewTextField As String
        Private allWOTextField As String
        'Private closeWOLabelField As String


        Public Sub New()
            MyBase.New()
            Me.fieldCreateWOTextField = ""
            Me.noDisplayTextField = ""
            Me.changeCrewTextField = ""
            Me.saveCrewTextField = ""
            Me.allWOTextField = ""

        End Sub

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property InvalidSqlMessage() As String
            Get
                Return Me.invalidSqlMessageField
            End Get
            Set(ByVal value As String)
                Me.invalidSqlMessageField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        Public Property FieldCreateWOText() As String
            Get
                Return Me.fieldCreateWOTextField
            End Get
            Set(ByVal value As String)
                Me.fieldCreateWOTextField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        Public Property NoDisplayText() As String
            Get
                Return Me.noDisplayTextField
            End Get
            Set(ByVal value As String)
                Me.noDisplayTextField = value
            End Set
        End Property
        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        Public Property ChangeCrewText() As String
            Get
                Return Me.changeCrewTextField
            End Get
            Set(ByVal value As String)
                Me.changeCrewTextField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        Public Property SaveCrewText() As String
            Get
                Return Me.saveCrewTextField
            End Get
            Set(ByVal value As String)
                Me.saveCrewTextField = value
            End Set
        End Property

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
        Public Property AllWOText() As String
            Get
                Return Me.allWOTextField
            End Get
            Set(ByVal value As String)
                Me.allWOTextField = value
            End Set
        End Property

        
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        'Public Property CloseWOLabel() As String
        '    Get
        '        Return Me.closeWOLabelField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.closeWOLabelField = value
        '    End Set
        'End Property


        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigWorkorderPanelUIComponents))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigWorkorderPanelUIComponents object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelUIComponents, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigWorkorderPanelUIComponents)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelUIComponents) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigWorkorderPanelUIComponents
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigWorkorderPanelUIComponents)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigWorkorderPanelUIComponents object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigEditControlOptionsAutoFieldPopulation object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelUIComponents, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigWorkorderPanelUIComponents)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigWorkorderPanelUIComponents) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigWorkorderPanelUIComponents
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class

    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.233"), _
      System.SerializableAttribute(), _
      System.ComponentModel.DesignerCategoryAttribute("code"), _
      System.Xml.Serialization.XmlTypeAttribute(AnonymousType:=True)> _
    Partial Public Class MobileConfigMobileMapConfigAutoSyncerSettings

        Private CopyCacheLocationField As String


        Private Shared sSerializer As System.Xml.Serialization.XmlSerializer

        <System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=0)> _
        Public Property CopyCacheLocation() As String
            Get
                Return Me.CopyCacheLocationField
            End Get
            Set(ByVal value As String)
                Me.CopyCacheLocationField = value
            End Set
        End Property

        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=1)> _
        'Public Property SplashImage() As String
        '    Get
        '        Return Me.splashImageField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.splashImageField = value
        '    End Set
        'End Property

        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=2)> _
        'Public Property AppImage() As String
        '    Get
        '        Return Me.appImageField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.appImageField = value
        '    End Set
        'End Property

        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=3)> _
        'Public Property FontSize() As String
        '    Get
        '        Return Me.fontSizeField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.fontSizeField = value
        '    End Set
        'End Property

        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=4)> _
        'Public Property SideBarControl() As String
        '    Get
        '        Return Me.sideBarControlField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.sideBarControlField = value
        '    End Set
        'End Property

        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=5)> _
        'Public Property CopyrightText() As String
        '    Get
        '        Return Me.copyrightTextField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.copyrightTextField = value
        '    End Set
        'End Property
        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=6)> _
        'Public Property VersionInfo() As String
        '    Get
        '        Return Me.versionInfoField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.versionInfoField = value
        '    End Set
        'End Property



        '<System.Xml.Serialization.XmlElementAttribute(Form:=System.Xml.Schema.XmlSchemaForm.Unqualified, Order:=7)> _
        'Public Property ZoomExtent() As String
        '    Get
        '        Return Me.zoomExtentField
        '    End Get
        '    Set(ByVal value As String)
        '        Me.zoomExtentField = value
        '    End Set
        'End Property

        Private Shared ReadOnly Property Serializer() As System.Xml.Serialization.XmlSerializer
            Get
                If (sSerializer Is Nothing) Then
                    sSerializer = New System.Xml.Serialization.XmlSerializer(GetType(MobileConfigMobileMapConfigAutoSyncerSettings))
                End If
                Return sSerializer
            End Get
        End Property

#Region "Serialize/Deserialize"
        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigAutoSyncerSettings object into an XML document
        '''</summary>
        '''<returns>string XML value</returns>
        Public Overridable Function Serialize() As String
            Dim streamReader As System.IO.StreamReader = Nothing
            Dim memoryStream As System.IO.MemoryStream = Nothing
            Try
                memoryStream = New System.IO.MemoryStream()
                Serializer.Serialize(memoryStream, Me)
                memoryStream.Seek(0, System.IO.SeekOrigin.Begin)
                streamReader = New System.IO.StreamReader(memoryStream)
                Return streamReader.ReadToEnd
            Finally
                If (Not (streamReader) Is Nothing) Then
                    streamReader.Dispose()
                End If
                If (Not (memoryStream) Is Nothing) Then
                    memoryStream.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Deserializes workflow markup into an MobileConfigMobileMapConfigAutoSyncerSettings object
        '''</summary>
        '''<param name="xml">string workflow markup to deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigAutoSyncerSettings object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigAutoSyncerSettings, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigAutoSyncerSettings)
            Try
                obj = Deserialize(xml)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String, ByRef obj As MobileConfigMobileMapConfigAutoSyncerSettings) As Boolean
            Dim exception As System.Exception = Nothing
            Return Deserialize(xml, obj, exception)
        End Function

        Public Overloads Shared Function Deserialize(ByVal xml As String) As MobileConfigMobileMapConfigAutoSyncerSettings
            Dim stringReader As System.IO.StringReader = Nothing
            Try
                stringReader = New System.IO.StringReader(xml)
                Return CType(Serializer.Deserialize(System.Xml.XmlReader.Create(stringReader)), MobileConfigMobileMapConfigAutoSyncerSettings)
            Finally
                If (Not (stringReader) Is Nothing) Then
                    stringReader.Dispose()
                End If
            End Try
        End Function

        '''<summary>
        '''Serializes current MobileConfigMobileMapConfigAutoSyncerSettings object into file
        '''</summary>
        '''<param name="fileName">full path of outupt xml file</param>
        '''<param name="exception">output Exception value if failed</param>
        '''<returns>true if can serialize and save into file; otherwise, false</returns>
        Public Overridable Overloads Function SaveToFile(ByVal fileName As String, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            Try
                SaveToFile(fileName)
                Return True
            Catch e As System.Exception
                exception = e
                Return False
            End Try
        End Function

        Public Overridable Overloads Sub SaveToFile(ByVal fileName As String)
            Dim streamWriter As System.IO.StreamWriter = Nothing
            Try
                Dim xmlString As String = Serialize()
                Dim xmlFile As System.IO.FileInfo = New System.IO.FileInfo(fileName)
                streamWriter = xmlFile.CreateText
                streamWriter.WriteLine(xmlString)
                streamWriter.Close()
            Finally
                If (Not (streamWriter) Is Nothing) Then
                    streamWriter.Dispose()
                End If
            End Try
        End Sub

        '''<summary>
        '''Deserializes xml markup from file into an MobileConfigMobileMapConfigAutoSyncerSettings object
        '''</summary>
        '''<param name="fileName">string xml file to load and deserialize</param>
        '''<param name="obj">Output MobileConfigMobileMapConfigAutoSyncerSettings object</param>
        '''<param name="exception">output Exception value if deserialize failed</param>
        '''<returns>true if this XmlSerializer can deserialize the object; otherwise, false</returns>
        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigAutoSyncerSettings, ByRef exception As System.Exception) As Boolean
            exception = Nothing
            obj = CType(Nothing, MobileConfigMobileMapConfigAutoSyncerSettings)
            Try
                obj = LoadFromFile(fileName)
                Return True
            Catch ex As System.Exception
                exception = ex
                Return False
            End Try
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String, ByRef obj As MobileConfigMobileMapConfigAutoSyncerSettings) As Boolean
            Dim exception As System.Exception = Nothing
            Return LoadFromFile(fileName, obj, exception)
        End Function

        Public Overloads Shared Function LoadFromFile(ByVal fileName As String) As MobileConfigMobileMapConfigAutoSyncerSettings
            Dim file As System.IO.FileStream = Nothing
            Dim sr As System.IO.StreamReader = Nothing
            Try
                file = New System.IO.FileStream(fileName, FileMode.Open, FileAccess.Read)
                sr = New System.IO.StreamReader(file)
                Dim xmlString As String = sr.ReadToEnd
                sr.Close()
                file.Close()
                Return Deserialize(xmlString)
            Finally
                If (Not (file) Is Nothing) Then
                    file.Dispose()
                End If
                If (Not (sr) Is Nothing) Then
                    sr.Dispose()
                End If
            End Try
        End Function
#End Region
    End Class


End Namespace
